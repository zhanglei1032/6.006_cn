1
00:00:00,000 --> 00:00:00,070



2
00:00:00,070 --> 00:00:01,770
The following content is provided
提供以下内容

3
00:00:01,770 --> 00:00:04,000
under a Creative Commons license.
根据知识共享许可。 

4
00:00:04,000 --> 00:00:06,859
Your support will help MIT OpenCourseWare continue
您的支持将帮助MIT OpenCourseWare继续

5
00:00:06,860 --> 00:00:10,720
to offer high quality educational resources for free.
免费提供高质量的教育资源。 

6
00:00:10,720 --> 00:00:13,339
To make a donation or view additional materials
捐款或查看其他材料

7
00:00:13,339 --> 00:00:17,207
from hundreds of MIT courses, visit MIT OpenCourseWare
从数百门麻省理工学院的课程中，访问MIT OpenCourseWare 

8
00:00:17,207 --> 00:00:17,832
at ocw.mit.edu.
在ocw.mit.edu。 

9
00:00:17,832 --> 00:00:21,109



10
00:00:21,309 --> 00:00:23,399
VICTOR COSTAN: Hi, everyone.
维克多·科斯坦：大家好。 

11
00:00:23,399 --> 00:00:25,479
I am Victor.
我是维克多。 

12
00:00:25,480 --> 00:00:26,730
My full name is Victor Costan.
我的全名是Victor Costan。 

13
00:00:26,730 --> 00:00:28,609
I'm a third year Ph.D. student.
我是博士三年级。学生。 

14
00:00:28,609 --> 00:00:33,149
I'm in CSAIL, and I work in systems.
我在CSAIL，并且在系统中工作。 

15
00:00:33,149 --> 00:00:36,609
I do mostly security and distributed systems.
我主要负责安全性和分布式系统。 

16
00:00:36,609 --> 00:00:39,674
And I'll be your algorithm TA for this term.
我将担任本学期的算法助教。 

17
00:00:39,674 --> 00:00:40,289
Yay.
好极了。 

18
00:00:40,289 --> 00:00:42,039
How many people went to lecture yesterday?
昨天有多少人去听课？ 

19
00:00:42,039 --> 00:00:45,339



20
00:00:45,340 --> 00:00:45,840
All right.
好吧。 

21
00:00:45,840 --> 00:00:48,419
Are there any parts of the lecture that were particularly
讲座中是否有任何特别之处

22
00:00:48,619 --> 00:00:51,609
unclear that you guys want to go over?
不清楚你们想过去吗？ 

23
00:00:51,609 --> 00:00:56,409
So that I schedule what I talk about in such a way
这样我就可以安排我谈论的话题

24
00:00:56,409 --> 00:00:58,579
that I'll cover that more than the parts
我将涵盖的范围不止于零件

25
00:00:58,579 --> 00:01:01,899
that are boring and obvious.
很无聊，很明显。 

26
00:01:01,899 --> 00:01:05,873
AUDIENCE: Can you explain complexity in equations,
听众：您能解释方程式的复杂性吗？ 

27
00:01:05,873 --> 00:01:08,209
because I took 042 like 3 years ago.
因为我像3年前一样拿了042。 

28
00:01:08,209 --> 00:01:08,959
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

29
00:01:08,959 --> 00:01:17,709



30
00:01:17,709 --> 00:01:19,409
What else?
还有什么？ 

31
00:01:19,409 --> 00:01:19,979
Thank you.
谢谢。 

32
00:01:19,980 --> 00:01:24,950



33
00:01:24,950 --> 00:01:26,938
AUDIENCE: Maybe some basic outlines for, like,
听众：也许， 

34
00:01:26,938 --> 00:01:29,873
writing proofs relevant to like the [INAUDIBLE].
撰写与[音频不清晰]类似的证明。 

35
00:01:29,873 --> 00:01:30,914
VICTOR COSTAN: All right.
维克多·科斯坦：好的。 

36
00:01:30,914 --> 00:01:32,902
AUDIENCE: Sort of methodology or something.
听众：某种方法论或其他东西。 

37
00:01:32,902 --> 00:01:40,600



38
00:01:40,600 --> 00:01:41,350
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

39
00:01:41,350 --> 00:01:45,326



40
00:01:45,326 --> 00:01:45,909
Anything else?
还要别的吗？ 

41
00:01:45,909 --> 00:01:51,621



42
00:01:51,621 --> 00:01:53,049
OK.
好。 

43
00:01:53,049 --> 00:01:56,459
We're going to get started then.
然后我们将开始。 

44
00:01:56,459 --> 00:02:00,989
So the hardest, and I think most important of the whole course,
因此，在整个课程中，最难的也是最重要的， 

45
00:02:00,989 --> 00:02:06,289
is learning how to deal with asymptotic complexity.
正在学习如何处理渐近复杂性。 

46
00:02:06,290 --> 00:02:09,370
So asymptotic complexity is this very nice tool
因此，渐近复杂度是非常好的工具

47
00:02:09,370 --> 00:02:12,020
where you have a function that looks
你有一个看起来像的功能

48
00:02:12,020 --> 00:02:18,141
like this plus-- what'll I have here?
像这样加上-我在这里要吃什么？ 

49
00:02:18,141 --> 00:02:22,515
10 plus sin x.
 10加罪恶x。 

50
00:02:22,515 --> 00:02:32,239



51
00:02:32,240 --> 00:02:35,774
So you have this guy, which is quite long and horrible
所以你有一个很长很恐怖的家伙

52
00:02:35,774 --> 00:02:37,189
and would make your life miserable
会让你的生活痛苦

53
00:02:37,189 --> 00:02:39,750
if you'd have to reason about it.
如果您必须对此进行推理。 

54
00:02:39,750 --> 00:02:49,759
And you can say that this is theta of n squared.
您可以说这是n平方的theta。 

55
00:02:49,759 --> 00:02:50,359
x, sorry.
 x，对不起。 

56
00:02:50,360 --> 00:02:54,810



57
00:02:55,009 --> 00:02:58,319
So everything that's here goes away.
因此，这里的所有内容都会消失。 

58
00:02:58,319 --> 00:03:00,269
And this constant factor here goes away,
这个恒定的因素消失了， 

59
00:03:00,270 --> 00:03:03,439
and it's nice and small function.
它的功能不错，功能也很小。 

60
00:03:03,639 --> 00:03:06,039
Why is that the case, first of all?
为什么会这样呢？ 

61
00:03:06,039 --> 00:03:11,359
If I plot this function-- and since I don't have my projector
如果我绘制此功能-而且因为我没有投影机

62
00:03:11,360 --> 00:03:13,430
you'll have to take my word for it--
您必须遵守我的承诺- 

63
00:03:13,430 --> 00:03:16,469
I will get something that looks like this.
我会得到这样的东西。 

64
00:03:16,669 --> 00:03:19,949



65
00:03:19,949 --> 00:03:22,500
If I plug this function, I will get
如果插入此功能，我会得到

66
00:03:22,500 --> 00:03:25,560
something that looks like this.
看起来像这样的东西。 

67
00:03:25,560 --> 00:03:29,800
This is a scale from 0 to 200.
这是从0到200的比例。 

68
00:03:29,800 --> 00:03:38,060
However, if I make my scale 0 to 20,000--
但是，如果我将刻度设为0到20,000， 

69
00:03:38,259 --> 00:03:42,250
Let's say 200,000 to make sure that is going to be correct.
假设有200,000个可以确保正确无误。 

70
00:03:42,250 --> 00:03:44,909
x squared looks like this.
 x平方看起来像这样。 

71
00:03:44,909 --> 00:03:52,266
And this function looks like this.
这个函数看起来像这样。 

72
00:03:52,266 --> 00:03:54,099
And as you make the scale bigger and bigger,
随着规模的扩大， 

73
00:03:54,099 --> 00:03:57,289
you can't even see this noise anymore.
您甚至再也看不到这种噪音。 

74
00:03:57,289 --> 00:04:01,000
The reason is that all the noise is in this term.
原因是所有的噪音都在这个术语中。 

75
00:04:01,000 --> 00:04:04,020
In the x to the power of one fifth term.
在x中有五分之一的幂。 

76
00:04:04,020 --> 00:04:09,719
And as n-- pretend this is n, x, n same thing--
就像n-假装这是n，x，n一样- 

77
00:04:09,719 --> 00:04:14,590
so as the input to the function gets bigger and bigger,
因此，随着对函数的输入越来越大， 

78
00:04:14,590 --> 00:04:17,588
this grows at a much faster rate than this.
它以比这快得多的速度增长。 

79
00:04:17,588 --> 00:04:21,219
So if I don't care about this, how the function grows,
因此，如果我对此不关心，功能如何增长， 

80
00:04:21,220 --> 00:04:25,870
I can ignore anything aside from the dominant term.
除了主导词外，我什么都可以忽略。 

81
00:04:25,870 --> 00:04:28,829



82
00:04:28,829 --> 00:04:30,370
Do people remember this from lecture?
人们在演讲中还记得吗？ 

83
00:04:30,370 --> 00:04:31,254
Does this make sense?
这有意义吗？ 

84
00:04:31,254 --> 00:04:34,139



85
00:04:34,139 --> 00:04:34,639
OK.
好。 

86
00:04:34,639 --> 00:04:35,805
If it doesn't, that's great.
如果没有，那就太好了。 

87
00:04:35,805 --> 00:04:39,229
It means that I'm not wasting time covering it.
这意味着我不会浪费时间来解决它。 

88
00:04:39,230 --> 00:04:41,639
So we learned about three symbols,
因此，我们了解了三个符号， 

89
00:04:41,639 --> 00:04:43,180
or we will learn about three symbols,
否则我们将了解三个符号， 

90
00:04:43,180 --> 00:04:46,620
when talking about asymptotic complexity.
在谈论渐进复杂性时。 

91
00:04:46,620 --> 00:04:52,790
The three symbols are theta, O, and omega.
这三个符号分别是theta，O和omega。 

92
00:04:52,790 --> 00:04:58,629
Let's say this complicated function is g.
假设这个复杂的函数是g。 

93
00:04:58,629 --> 00:05:00,839
And this nice simple function is f.
这个简单的函数是f。 

94
00:05:00,839 --> 00:05:07,329



95
00:05:07,329 --> 00:05:15,180
If I say that g of x is theta of f of x, that means two things.
如果我说x的g是x的f的theta，那意味着两件事。 

96
00:05:15,180 --> 00:05:20,139
It means I have a lower bound, like I showed here,
就像我在这里所示，这意味着我有一个下限， 

97
00:05:20,139 --> 00:05:23,949
and the lower bound looks something like x squared.
下界看起来像x平方。 

98
00:05:23,949 --> 00:05:27,370
And it means that I also have a higher-- an upper bound for it
这意味着我也有一个更高的上限

99
00:05:27,370 --> 00:05:29,389
that also looks like x squared.
看起来也像x平方。 

100
00:05:29,389 --> 00:05:31,389
So the upper bound would be something like this.
因此，上限将是这样的。 

101
00:05:31,389 --> 00:05:34,110



102
00:05:34,110 --> 00:05:37,660
And if I say this, then I'm making a promise
如果我这样说，那是我的承诺

103
00:05:37,660 --> 00:05:39,790
that the function stays between the lower
该功能停留在较低

104
00:05:39,790 --> 00:05:41,329
bound and the upper bound, and the bounds
界限和上限，以及界限

105
00:05:41,529 --> 00:05:43,250
look sort of the same.
看起来差不多。 

106
00:05:43,250 --> 00:05:46,269
I can't really have x squared here, and x squared here.
我真的不能在这里x平方，在这里x平方。 

107
00:05:46,269 --> 00:05:47,379
Right?
对？ 

108
00:05:47,379 --> 00:05:49,139
That would be impossible.
那是不可能的。 

109
00:05:49,139 --> 00:05:51,050
So that's why I said they look the same.
这就是为什么我说它们看起来相同。 

110
00:05:51,050 --> 00:05:52,889
They're not the same.
他们不一样。 

111
00:05:53,089 --> 00:05:55,319
And they're not the same, because they're
他们不一样，因为他们

112
00:05:55,319 --> 00:05:58,040
allowed to differ by a constant factor.
允许相差一个常数。 

113
00:05:58,040 --> 00:06:04,730
So if this is f, and say this is f prime, f of x
因此，如果这是f，并说这是f素数，则x的f 

114
00:06:04,730 --> 00:06:07,740
might be x squared.
可能是x平方。 

115
00:06:07,740 --> 00:06:11,509
And we know for sure that this is going to be lower than this.
而且我们可以肯定的是，这将低于这个水平。 

116
00:06:11,709 --> 00:06:20,799
And f prime of x might be 1.2 times x squared.
 x的f素数可能是x平方的1.2倍。 

117
00:06:20,800 --> 00:06:22,860
And because I have a 1.1 here-- and I
而且因为我在这里有一个1.1-我

118
00:06:22,860 --> 00:06:26,199
know that these get smaller and smaller in relation to this
知道这些相对于此变得越来越小

119
00:06:26,399 --> 00:06:29,639
as the function-- as the inputs to the function get bigger--
随着功能的发展-随着功能的投入越来越大- 

120
00:06:29,639 --> 00:06:32,620
I know that this is going to be the dominating factor.
我知道这将是主要因素。 

121
00:06:32,620 --> 00:06:34,939
And because this is bigger than this,
而且因为这比这个更大， 

122
00:06:34,939 --> 00:06:36,949
this function is going to eventually
该功能将最终

123
00:06:36,949 --> 00:06:40,060
be larger than this function.
大于此功能。 

124
00:06:40,060 --> 00:06:43,329
So I have a bound from above, and I have a bound from below.
因此，我从上方有一个界限，而我从下方有一个界限。 

125
00:06:43,329 --> 00:06:45,370
And the bounds look almost the same.
边界看起来几乎相同。 

126
00:06:45,370 --> 00:06:47,740
They're only different by a constant factor.
它们仅相差一个常数。 

127
00:06:47,740 --> 00:06:50,670
This is theta.
这是θ。 

128
00:06:50,670 --> 00:06:52,199
To make things spicier-- by the way,
顺便说一句，让事情变得更有趣

129
00:06:52,399 --> 00:06:56,370
theta is really hard to pronounce as opposed to O,
与O相反，theta确实很难发音， 

130
00:06:56,370 --> 00:07:00,949
so we usually say and write O instead of theta.
所以我们通常说O而不是theta 

131
00:07:00,949 --> 00:07:03,729
We'll talk about what O really means in a bit.
我们稍后将讨论O的真正含义。 

132
00:07:03,730 --> 00:07:06,740
But if you see O in a lot of places, including our notes,
但是，如果您在很多地方看到O，包括我们的笔记， 

133
00:07:06,740 --> 00:07:09,579
know that most of the time we actually mean theta.
知道大多数时候我们实际上是指theta。 

134
00:07:09,779 --> 00:07:11,285
And sorry for that.
对此深表歉意。 

135
00:07:11,286 --> 00:07:13,826
AUDIENCE: When do we you actually mean O?
听众：我们什么时候真正表示O？ 

136
00:07:13,826 --> 00:07:15,910
VICTOR COSTAN: You can ask us, and we'll tell you.
维克多·科斯坦：您可以问我们，我们会告诉您。 

137
00:07:15,910 --> 00:07:18,050
[LAUGHTER]
 [笑声] 

138
00:07:18,050 --> 00:07:20,250
Fortunately, it doesn't a matter too much.
幸运的是，这没什么大不了的。 

139
00:07:20,250 --> 00:07:22,696
So we're trying to get an idea of how the functions look
因此，我们试图了解这些功能的外观

140
00:07:22,696 --> 00:07:23,620
like in the bigger picture.
就像在大局中一样。 

141
00:07:23,819 --> 00:07:25,689
So most of the time it doesn't matter.
所以大多数时候都没关系。 

142
00:07:25,689 --> 00:07:28,079
I'll give you an example though of where it matters,
我会给你一个例子，说明它的重要性， 

143
00:07:28,079 --> 00:07:30,899
and how it could matter.
以及它可能有多重要。 

144
00:07:30,899 --> 00:07:38,214
So suppose I have another function that looks like this.
因此，假设我还有另一个看起来像这样的功能。 

145
00:07:38,214 --> 00:07:40,879



146
00:07:40,879 --> 00:07:42,850
So this is kind of ugly, too.
所以这也很丑。 

147
00:07:42,850 --> 00:07:56,000
This function is g of x, say x times 1 plus sin of x.
该函数是x的g，例如x乘以1加x的sin。 

148
00:07:56,000 --> 00:08:00,139



149
00:08:00,139 --> 00:08:02,729
So I can't say anything about the lower bound of this.
因此，我对此无能为力。 

150
00:08:02,730 --> 00:08:07,750
This is going to hit 0 at an infinite number of values.
这将以无限数量的值达到0。 

151
00:08:07,750 --> 00:08:08,250
Right?
对？ 

152
00:08:08,250 --> 00:08:11,670
So I can't say that-- I can't have a nice lower bound for it.
所以我不能这么说-我不能为它设定一个很好的下限。 

153
00:08:11,670 --> 00:08:13,680
The lower bound for it is 0.
下限为0。 

154
00:08:13,680 --> 00:08:15,579
But I'm pretty sure that it's never
但我很确定永远不会

155
00:08:15,779 --> 00:08:17,379
going to be bigger than 2x.
将大于2倍。 

156
00:08:17,379 --> 00:08:17,879
Right?
对？ 

157
00:08:17,879 --> 00:08:19,870
And that's still worth something.
那还是值得的。 

158
00:08:19,870 --> 00:08:22,552
So there's this other function here
所以这里有另一个功能

159
00:08:22,552 --> 00:08:23,560
that's supposed to be a line.
那应该是一条线。 

160
00:08:23,759 --> 00:08:26,370
Pretend it's a line.
假装这是一条线。 

161
00:08:26,370 --> 00:08:28,579
f of x equals 2x.
 x的f等于2x。 

162
00:08:28,779 --> 00:08:32,408
And I know for sure that this is never
我可以肯定，这永远不会

163
00:08:32,408 --> 00:08:34,418
going to exceed these, this.
将会超过这些。 

164
00:08:34,418 --> 00:08:36,808
And in that case, where I only have one upper bound,
在那种情况下，我只有一个上限， 

165
00:08:36,808 --> 00:08:41,798
and I don't have a good lower bound, I say that g of x
而且我没有很好的下界，我说x的g 

166
00:08:41,798 --> 00:08:44,669
is order of f of x.
是x的f的阶数。 

167
00:08:44,669 --> 00:08:48,229
And this is where-- This is what O really means.
这就是-这就是O的真正意思。 

168
00:08:48,230 --> 00:08:50,230
It means that I only have an upper bound and not
这意味着我只有一个上限，而没有

169
00:08:50,230 --> 00:08:52,719
a lower bound.
下界。 

170
00:08:52,919 --> 00:08:55,750
In most of the cases when you're coding something,
在大多数情况下，当您编写代码时， 

171
00:08:55,750 --> 00:08:59,350
you don't really care how well your program
你真的不在乎你的程序有多好

172
00:08:59,350 --> 00:09:00,649
can run if you're really lucky.
如果您真的很幸运，可以运行。 

173
00:09:00,649 --> 00:09:02,357
What you really care about is how does it
您真正关心的是如何进行

174
00:09:02,357 --> 00:09:03,619
run in the worst case?
在最坏的情况下运行？ 

175
00:09:03,620 --> 00:09:05,897
Or how does it run most of the time?
还是大多数情况下如何运行？ 

176
00:09:05,897 --> 00:09:08,230
So suppose you're Google, and you're writing your search
因此，假设您是Google，并且您正在编写搜索

177
00:09:08,230 --> 00:09:10,889
engine, and you have to return the result
引擎，您必须返回结果

178
00:09:10,889 --> 00:09:12,990
to the user in 200 milliseconds.
在200毫秒内发送给用户。 

179
00:09:12,990 --> 00:09:15,289
Because they did a study that shows that if you return
因为他们进行的一项研究表明，如果您返回

180
00:09:15,289 --> 00:09:17,750
the result in 400 milliseconds, they
结果以400毫秒为单位， 

181
00:09:17,750 --> 00:09:19,809
lose some number of users, which means
失去一些用户，这意味着

182
00:09:19,809 --> 00:09:22,129
they lose some number of billions a year.
他们每年损失数十亿美元。 

183
00:09:22,129 --> 00:09:24,549
So to them a guarantee that their algorithms complete
因此对他们来说，保证他们的算法是完整的

184
00:09:24,549 --> 00:09:26,819
in 200 milliseconds is pretty important,
在200毫秒内非常重要， 

185
00:09:26,820 --> 00:09:28,839
because it means a ton of money.
因为这意味着一大笔钱。 

186
00:09:29,039 --> 00:09:31,769
So if you have a running time that looks like this,
因此，如果您的运行时间看起来像这样， 

187
00:09:31,769 --> 00:09:35,279
that's OK, as long as this is 200 milliseconds
没关系，只要是200毫秒

188
00:09:35,279 --> 00:09:38,899
for the number of pages that Google indexes.
 Google索引的页面数。 

189
00:09:38,899 --> 00:09:39,774
Does that make sense?
那有意义吗？ 

190
00:09:39,774 --> 00:09:43,029



191
00:09:43,029 --> 00:09:43,529
OK.
好。 

192
00:09:43,529 --> 00:09:45,269
No answer means yes.
没有答案意味着是。 

193
00:09:45,269 --> 00:09:47,620
So if it doesn't make sense, please say something.
因此，如果没有任何意义，请说些什么。 

194
00:09:47,620 --> 00:09:52,240



195
00:09:52,240 --> 00:09:53,960
OK, I will draw another function.
好的，我将绘制另一个功能。 

196
00:09:53,960 --> 00:09:54,460
Again--
再次 - 

197
00:09:54,460 --> 00:09:54,950
AUDIENCE: Victor?
听众：维克多？ 

198
00:09:54,950 --> 00:09:55,589
VICTOR COSTAN: --wavy.
维克多·科斯坦：-波浪形。 

199
00:09:55,789 --> 00:09:56,289
Yes?
是？ 

200
00:09:56,289 --> 00:09:59,909
AUDIENCE: It says x times 1 plus something [INAUDIBLE].
听众：说x乘以1加[听不清]。 

201
00:09:59,909 --> 00:10:00,629
So what?
所以呢？ 

202
00:10:00,629 --> 00:10:00,950
VICTOR COSTAN: So it's--
维克多·科斯坦：所以- 

203
00:10:00,950 --> 00:10:01,665
AUDIENCE: Oh it's sin.
听众：哦，这是罪过。 

204
00:10:01,865 --> 00:10:03,283
VICTOR COSTAN: 1 plus sin of x.
维克多·COSTAN：1加x的罪。 

205
00:10:03,283 --> 00:10:03,782
It--
它 - 

206
00:10:03,782 --> 00:10:05,000
AUDIENCE: It looks like [INAUDIBLE].
听众：看起来像[听不清]。 

207
00:10:05,000 --> 00:10:06,090
VICTOR COSTAN: Yeah.
维克多·科斯坦：是的。 

208
00:10:06,090 --> 00:10:07,783
Sorry, my handwriting is not very good.
抱歉，我的笔迹不是很好。 

209
00:10:07,783 --> 00:10:08,533
AUDIENCE: It's OK.
听众：可以。 

210
00:10:08,533 --> 00:10:09,360
Mine isn't either.
我的也不是。 

211
00:10:09,360 --> 00:10:10,860
VICTOR COSTAN: And it doesn't really
维克多·科斯坦：而且不是真的

212
00:10:10,860 --> 00:10:13,169
matter what it is, it just needs to be sin
不管是什么，只需要犯罪

213
00:10:13,169 --> 00:10:14,639
so that it looks wavy like this.
这样看起来像波浪形

214
00:10:14,639 --> 00:10:14,979
AUDIENCE: OK.
听众：好的。 

215
00:10:15,179 --> 00:10:16,009
VICTOR COSTAN: So that I can make
维克多·科斯坦：这样我就可以

216
00:10:16,009 --> 00:10:17,379
something that looks complicated.
看起来很复杂的东西。 

217
00:10:17,379 --> 00:10:17,871
OK.
好。 

218
00:10:17,871 --> 00:10:18,363
AUDIENCE: Got it.
听众：知道了。 

219
00:10:18,364 --> 00:10:19,840
AUDIENCE: I have a question, too.
听众：我也有一个问题。 

220
00:10:19,840 --> 00:10:23,649
In the first example, is it 1.2 times x squared?
在第一个示例中，是否为x平方的1.2倍？ 

221
00:10:23,649 --> 00:10:24,440
VICTOR COSTAN: Yes.
维克多·科斯坦：是的。 

222
00:10:24,440 --> 00:10:26,720
I wanted something that's higher than 1.1.
我想要的东西高于1.1。 

223
00:10:26,720 --> 00:10:28,080
AUDIENCE: It's like [INAUDIBLE].
听众：就像[听不清]。 

224
00:10:28,080 --> 00:10:28,670
VICTOR COSTAN: Yes.
维克多·科斯坦：是的。 

225
00:10:28,870 --> 00:10:32,449



226
00:10:32,450 --> 00:10:32,950
OK.
好。 

227
00:10:32,950 --> 00:10:35,133
Now that I got a break, does anyone else
现在我休息了，还有其他人吗

228
00:10:35,333 --> 00:10:36,250
want to ask questions?
想问问题吗？ 

229
00:10:36,250 --> 00:10:40,480



230
00:10:40,480 --> 00:10:41,899
OK.
好。 

231
00:10:41,899 --> 00:10:44,827
So I'm going to draw another function.
所以我要画另一个功能。 

232
00:10:44,827 --> 00:10:47,339
This one looks like this.
这个看起来像这样。 

233
00:10:47,340 --> 00:10:58,176
And this is f of x equals 1 plus sin of x.
 x的f等于1加x的sin。 

234
00:10:58,176 --> 00:11:02,110
I have to use these signs to make them look like that.
我必须使用这些标志使它们看起来像那样。 

235
00:11:02,110 --> 00:11:05,879
Times x to the power of-- What do I have there?
乘以x的力量-我在那里有什么？ 

236
00:11:05,879 --> 00:11:13,179
1 5 plus x to the power of one fourth.
 1 5加x为四分之一的幂。 

237
00:11:13,179 --> 00:11:16,509
So for this function I know for sure that it is greater than x
因此对于此函数，我肯定知道它大于x 

238
00:11:16,509 --> 00:11:17,909
to the power of one fourth.
达到四分之一的力量

239
00:11:17,909 --> 00:11:18,709
Right?
对？ 

240
00:11:18,710 --> 00:11:20,639
So if this is--
所以如果这是- 

241
00:11:20,639 --> 00:11:26,769



242
00:11:26,769 --> 00:11:29,216
I know for sure that it's greater than that.
我肯定知道它比那还大。 

243
00:11:29,216 --> 00:11:32,440
Also if I look at this, and I know that sin is never
另外，如果我看着这个，我知道罪恶永远不会

244
00:11:32,440 --> 00:11:35,100
bigger than 1, I know this whole thing is going to be,
大于1，我知道整个事情都会发生， 

245
00:11:35,100 --> 00:11:36,470
at most, 2.
最多2。 

246
00:11:36,470 --> 00:11:38,019
So if I have another function that
所以如果我有另一个功能

247
00:11:38,019 --> 00:11:46,689
says f prime of x equals, say, 3 times x to the power of 1.5,
说x的f素数等于x的3乘以1.5的幂， 

248
00:11:46,690 --> 00:11:51,210
I know that it's going to bound it from above.
我知道它会从上面限制它。 

249
00:11:51,210 --> 00:11:53,480
So I have two bounds.
所以我有两个界限。 

250
00:11:53,480 --> 00:11:58,470
So it sort of looks like this case.
所以看起来像这种情况。 

251
00:11:58,470 --> 00:12:01,339
Except when I use theta, I have to make sure
除非我使用theta，否则我必须确保

252
00:12:01,539 --> 00:12:04,219
that the bounds are very similar.
边界非常相似。 

253
00:12:04,220 --> 00:12:06,690
They can only differ by a constant factor.
它们只能相差一个常数。 

254
00:12:06,690 --> 00:12:10,089
In this case my bounds differ by the exponent
在这种情况下，我的界限因指数而异

255
00:12:10,289 --> 00:12:12,329
here, which is more than a constant factor,
在这里，这不仅仅是一个常数， 

256
00:12:12,330 --> 00:12:14,609
so they're not the same.
所以他们不一样。 

257
00:12:14,809 --> 00:12:20,359
So if I take my function-- which by the way is g--
因此，如果我采用我的功能-顺便说一下，它是g- 

258
00:12:20,360 --> 00:12:30,580
if I want to say that g to the x is theta of something, I can't.
如果我想说x的g是某物的theta，我不能。 

259
00:12:30,580 --> 00:12:32,490
Because no matter what I put in here,
因为不管我在这里放什么

260
00:12:32,490 --> 00:12:35,789
it's not going to be correct.
这是不正确的。 

261
00:12:35,789 --> 00:12:39,289
The lower bound is this, the upper bound is this.
下限是这个，上限是这个。 

262
00:12:39,289 --> 00:12:42,519
But what I can do is I can say that I know for sure that it
但是我能做的是可以肯定地说我知道

263
00:12:42,519 --> 00:12:46,740
is theta of x to the power one fourth.
是x的幂的四分之一的θ。 

264
00:12:46,740 --> 00:12:48,490
And by the way I can also say that it
顺便说一句，我也可以说

265
00:12:48,490 --> 00:12:52,240
is order of x to the power of one fifth.
是x的幂到五分之一的幂。 

266
00:12:52,240 --> 00:12:54,979



267
00:12:55,179 --> 00:12:58,099
So if you have weird running times that looks like this,
因此，如果您的运行时间看起来很奇怪， 

268
00:12:58,100 --> 00:13:04,600
then you can only use O and omega.
那么您只能使用O和omega。 

269
00:13:04,600 --> 00:13:06,220
And with that being said, we will
话虽如此，我们将

270
00:13:06,220 --> 00:13:09,210
use O for pretty much the rest of this course.
本课程的其余大部分时间都使用O。 

271
00:13:09,210 --> 00:13:12,610
And for most of the cases we'll use it to mean theta.
在大多数情况下，我们将使用它来表示theta。 

272
00:13:12,610 --> 00:13:16,960



273
00:13:16,960 --> 00:13:20,110
Oh, by the way, these formulas look ugly and complicated,
哦，顺便说一下，这些公式看起来丑陋而复杂， 

274
00:13:20,110 --> 00:13:24,389
because I wanted the graphs to look complicated to illustrate
因为我希望图表看起来复杂起来以说明问题

275
00:13:24,389 --> 00:13:27,439
the idea that asymptotic notation makes
渐进符号使

276
00:13:27,440 --> 00:13:29,941
things look simpler.
事情看起来更简单。 

277
00:13:29,941 --> 00:13:32,440
In this course the running times that you'll be dealing with
在本课程中，您将要处理的运行时间

278
00:13:32,440 --> 00:13:34,929
are all look like this.
都是这样子的

279
00:13:35,129 --> 00:13:45,799
They will either be order 1, order log n, order n, order n
它们将是1阶，log n阶，n阶，n阶

280
00:13:45,799 --> 00:13:50,549
log n, n ordered n squared.
对数n，n排序n的平方。 

281
00:13:50,549 --> 00:13:53,449
You might have one or two cases where you get something else,
您可能会遇到一两种情况， 

282
00:13:53,450 --> 00:13:55,839
but most of the time if you have something else
但是大多数时候如果你还有其他东西

283
00:13:56,039 --> 00:13:59,730
coming out of your occurrence, it means you're doing it wrong.
从事件中脱颖而出，就意味着您做错了。 

284
00:13:59,730 --> 00:14:01,081
So nice tip to have.
很棒的提示。 

285
00:14:01,081 --> 00:14:03,080
And you can see that I already started doing it.
您会看到我已经开始这样做了。 

286
00:14:03,080 --> 00:14:06,580
I'm already using O instead of theta.
我已经在用O代替theta了。 

287
00:14:06,580 --> 00:14:08,469
So I guess I'm getting into the habit.
所以我想我正在养成这种习惯。 

288
00:14:08,669 --> 00:14:11,663



289
00:14:11,663 --> 00:14:15,574
AUDIENCE: So why did you leave the theta one blank for g of x?
听众：那么，为什么对x的g保留theta一个空白？ 

290
00:14:15,575 --> 00:14:16,950
VICTOR COSTAN: Because whatever I
维克多·科斯坦：因为无论我

291
00:14:16,950 --> 00:14:18,589
put here is going to be wrong.
放在这里将是错误的。 

292
00:14:18,789 --> 00:14:22,250
If I put x to the power of one fifth,
如果我将x乘以五分之一的幂， 

293
00:14:22,250 --> 00:14:25,379
this is wrong, because I can have an upper bound that
这是错误的，因为我可以有一个上限

294
00:14:25,379 --> 00:14:28,019
has x to the power of one fifth in it.
 x的幂为五分之一。 

295
00:14:28,019 --> 00:14:30,299
But I can't have a lower bound like that,
但是我不能有这样的下限， 

296
00:14:30,299 --> 00:14:33,029
because this function hits x to the power of one
因为此函数使x达到1的幂

297
00:14:33,029 --> 00:14:35,879
fourth in infinitely many points.
在无限多点中排名第四。 

298
00:14:35,879 --> 00:14:38,909
If I try to do x to the power of one fourth, same deal.
如果我尝试将x放大至四分之一的幂，则同样的处理。 

299
00:14:38,909 --> 00:14:41,610
Lower bound yes, upper bound no.
下限是，上限是。 

300
00:14:41,610 --> 00:14:43,669
So whatever I put in here is going to be wrong.
因此，无论我在此处输入什么内容，都会出错。 

301
00:14:43,669 --> 00:14:46,219



302
00:14:46,220 --> 00:14:47,029
Thank you.
谢谢。 

303
00:14:47,029 --> 00:14:48,697
Good question.
好问题。 

304
00:14:48,697 --> 00:14:49,197
Yes?
是？ 

305
00:14:49,197 --> 00:14:52,108
AUDIENCE: Is that 1.4 or one fourth?
听众：是1.4还是四分之一？ 

306
00:14:52,109 --> 00:14:52,699
VICTOR COSTAN: 1.4.
维克多·波士坦（VICTOR COSTAN）：1.4。 

307
00:14:52,899 --> 00:14:54,850
They are 1.4 and 1.5
它们是1.4和1.5 

308
00:14:54,850 --> 00:14:55,392
AUDIENCE: OK.
听众：好的。 

309
00:14:55,392 --> 00:14:57,609
Because I thought you were saying 1/4 and I was--
因为我以为你说的是​​1/4而我是- 

310
00:14:57,609 --> 00:14:58,449
VICTOR COSTAN: Oh, sorry.
维克多·科斯坦：抱歉。 

311
00:14:58,649 --> 00:14:59,943
1 4, 1.4.
 1 4，1.4。 

312
00:14:59,943 --> 00:15:05,591
1.4, 1.5.
 1.4、1.5。 

313
00:15:05,591 --> 00:15:06,090
OK.
好。 

314
00:15:06,090 --> 00:15:06,680
Are we good so far?
到目前为止我们还好吗？ 

315
00:15:06,880 --> 00:15:23,179



316
00:15:23,179 --> 00:15:23,679
OK.
好。 

317
00:15:23,679 --> 00:15:25,303
Let's go through a couple of exercises.
让我们进行一些练习。 

318
00:15:25,303 --> 00:15:27,376
So I'll give you a few functions-- Yes?
所以，我给您提供一些功能-是吗？ 

319
00:15:27,376 --> 00:15:29,209
AUDIENCE: Do you make omega-- Is that-- It's
听众：你是欧米茄的吗-是的-是的

320
00:15:29,210 --> 00:15:31,599
a lower bound already without multiplying by any constant,
下界已经没有乘以任何常数， 

321
00:15:31,799 --> 00:15:32,479
or something?
或者其他的东西？ 

322
00:15:32,480 --> 00:15:33,990
Is that what it is?
那是什么吗？ 

323
00:15:33,990 --> 00:15:36,190
VICTOR COSTAN: So for all of these,
维克多·科斯坦：所以对于所有这些， 

324
00:15:36,190 --> 00:15:41,199
what you put here is the simple, is the simple form.
您在这里输入的是简单形式，是简单形式。 

325
00:15:41,399 --> 00:15:44,090
So you're lower bound can be this function multiplied
因此您的下界可以乘以该函数

326
00:15:44,090 --> 00:15:45,099
by any constant factor.
任何恒定的因素。 

327
00:15:45,299 --> 00:15:47,914
AUDIENCE: That-- So omega means lower bound?
听众：那-欧米茄意味着下界吗？ 

328
00:15:47,914 --> 00:15:49,539
VICTOR COSTAN: Omega means lower bound,
维克多·科斯坦：欧米茄意味着下界， 

329
00:15:49,539 --> 00:15:52,569
O means upper bound, theta means both.
 O表示上限，theta表示两者。 

330
00:15:52,570 --> 00:15:58,379



331
00:15:58,379 --> 00:16:00,929
OK.
好。 

332
00:16:00,929 --> 00:16:04,859
Any other things to clear up before I ask questions?
在问问题之前还有其他需要清除的内容吗？ 

333
00:16:04,860 --> 00:16:06,529
So it's your turn before it's my turn.
轮到你了，轮到我了。 

334
00:16:06,529 --> 00:16:09,670



335
00:16:09,671 --> 00:16:09,969
All right.
好吧。 

336
00:16:10,169 --> 00:16:12,000
I'm going to go over a few functions,
我将介绍一些功能， 

337
00:16:12,000 --> 00:16:14,220
and I want you guys to tell me what--
我要你们告诉我什么

338
00:16:14,220 --> 00:16:17,519
to help me write them in asymptotic notation.
帮我用渐近符号来写

339
00:16:17,519 --> 00:16:22,230
So I will have f of n.
因此，我将得到f为n。 

340
00:16:22,230 --> 00:16:27,529
And I want to know it's theta of what?
我想知道这是什么的theta？ 

341
00:16:27,529 --> 00:16:32,679
So let's start with f of n equals 10 to the 80.
因此，让我们从n的f等于80等于10开始。 

342
00:16:32,679 --> 00:16:34,779
Does anyone know why 10 to the 80?
有谁知道为什么10到80？ 

343
00:16:34,779 --> 00:16:37,140



344
00:16:37,140 --> 00:16:37,639
Yes.
是。 

345
00:16:37,639 --> 00:16:40,299
AUDIENCE: That'd be O of 1.
听众：那是1的O。 

346
00:16:40,299 --> 00:16:41,049
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

347
00:16:41,049 --> 00:16:42,434
That's the correct answer.
那是正确的答案。 

348
00:16:42,434 --> 00:16:43,559
You 're going ahead though.
不过，您正在前进。 

349
00:16:43,559 --> 00:16:48,750
I was wondering if-- I was wondering if you know why?
我想知道是否-我想知道你为什么吗？ 

350
00:16:48,750 --> 00:16:50,423
Why did I choose this?
我为什么选择这个？ 

351
00:16:50,423 --> 00:16:51,840
Does anyone know why I chose this?
有谁知道我为什么选择这个？ 

352
00:16:51,840 --> 00:16:52,340
Yes?
是？ 

353
00:16:52,340 --> 00:16:53,613
AUDIENCE: Is that [INAUDIBLE]?
听众：那是[听不清]？ 

354
00:16:53,813 --> 00:16:55,230
VICTOR COSTAN: I think that's 100.
维克多·科斯坦：我认为是100。 

355
00:16:55,230 --> 00:16:56,099
AUDIENCE: Oh, OK.
听众：哦，好。 

356
00:16:56,099 --> 00:16:57,689
VICTOR COSTAN: You're getting close though.
维克多·科斯坦：但是，你已经接近了。 

357
00:16:57,889 --> 00:16:58,787
It's something.
是的

358
00:16:58,787 --> 00:17:00,245
AUDIENCE: It's a really big number.
听众：这是一个很大的数字。 

359
00:17:00,245 --> 00:17:02,311
VICTOR COSTAN: It's a really big number.
维克多·科斯坦：这是一个很大的数字。 

360
00:17:02,311 --> 00:17:02,609
All right.
好吧。 

361
00:17:02,809 --> 00:17:04,190
So it's a really big number.
所以这是一个很大的数字。 

362
00:17:04,190 --> 00:17:07,440
That's the estimated number of atoms in the universe.
那是宇宙中估计的原子数。 

363
00:17:07,440 --> 00:17:09,658
So realistically any quantity that you
几乎所有的数量

364
00:17:09,858 --> 00:17:12,259
deal with that will represent the real world,
处理将代表现实世界， 

365
00:17:12,259 --> 00:17:15,838
is not going to be bigger than this.
不会比这个更大。 

366
00:17:15,838 --> 00:17:18,078
So if you want to get all philosophical,
因此，如果您想了解所有哲学知识， 

367
00:17:18,078 --> 00:17:20,848
you can say that for any algorithm that you write
您可以说，对于您编写的任何算法

368
00:17:20,848 --> 00:17:22,720
in any realistic input the running time
在任何实际输入中运行时间

369
00:17:22,720 --> 00:17:24,279
will be theta of 1.
将是1的θ。 

370
00:17:24,279 --> 00:17:26,848
But if you do this, we're not going to be happy with you
但是如果您这样做，我们将不会对您满意

371
00:17:26,848 --> 00:17:27,967
on exams.
在考试中。 

372
00:17:27,968 --> 00:17:30,119
[LAUGHTER]
 [笑声] 

373
00:17:30,319 --> 00:17:32,799
So let's choose another one.
因此，让我们选择另一个。 

374
00:17:32,799 --> 00:17:35,460
20 n to the power of 7.
 20 n至7的幂。 

375
00:17:35,460 --> 00:17:38,899



376
00:17:39,099 --> 00:17:40,740
What's this an asymptotic notation?
这是一种渐近符号吗？ 

377
00:17:40,740 --> 00:17:41,500
And why?
又为什么呢

378
00:17:41,500 --> 00:17:49,990



379
00:17:49,990 --> 00:17:50,490
Yes?
是？ 

380
00:17:50,490 --> 00:17:54,549
AUDIENCE: Order O of n to the seventh.
听众：n的O阶到第七。 

381
00:17:54,549 --> 00:17:56,359
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

382
00:17:56,359 --> 00:17:59,719
Of that same thing, n to the seventh.
同样，n到第七。 

383
00:17:59,720 --> 00:18:00,220
Thank you.
谢谢。 

384
00:18:00,220 --> 00:18:01,721
Why is that?
这是为什么？ 

385
00:18:01,721 --> 00:18:04,949
AUDIENCE: Because if you distribute the exponent 7,
听众：因为如果您分配指数7， 

386
00:18:04,949 --> 00:18:07,289
20 to the seventh is a constant.
 20到第七是常数。 

387
00:18:07,289 --> 00:18:08,569
VICTOR COSTAN: Excellent.
 VICTOR COSTAN：太好了。 

388
00:18:08,569 --> 00:18:11,159
20 to the 7 time n to the 7, this
 20到7时间n到7 

389
00:18:11,160 --> 00:18:12,399
is a constant so it goes away.
是一个常数，所以它消失了。 

390
00:18:12,599 --> 00:18:18,709



391
00:18:18,710 --> 00:18:19,329
OK.
好。 

392
00:18:19,329 --> 00:18:21,419
And before I do another one, I want
在我再做一个之前

393
00:18:21,420 --> 00:18:24,779
to give you guys some help and remind you about logs.
给大家一些帮助，并提醒您有关日志的信息。 

394
00:18:24,779 --> 00:18:27,240
How many people remember the laws
有多少人记得法律

395
00:18:27,240 --> 00:18:29,859
of working with logs from algebra or some math class?
来自代数或某些数学课的日志的方法？ 

396
00:18:29,859 --> 00:18:32,240



397
00:18:32,240 --> 00:18:32,740
All right.
好吧。 

398
00:18:32,740 --> 00:18:36,509
You guys will be helping me write them for everyone else.
你们会帮助我为其他人写的。 

399
00:18:36,509 --> 00:18:40,960
So if I have log of n to the 100,
因此，如果我的n的对数为100， 

400
00:18:40,960 --> 00:18:44,640
and I want to get to the theta notation for it, what is it
我想知道theta表示法是什么

401
00:18:44,640 --> 00:18:47,190
and why?
为什么呢？ 

402
00:18:47,190 --> 00:18:48,129
AUDIENCE: Log n.
听众：登录n。 

403
00:18:48,329 --> 00:18:49,079
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

404
00:18:49,079 --> 00:18:49,579
Excellent.
优秀的。 

405
00:18:49,579 --> 00:18:53,919



406
00:18:53,920 --> 00:18:55,746
Why is that the case?
为什么会这样？ 

407
00:18:55,746 --> 00:18:57,950
AUDIENCE: It's 100 log n.
听众：100 log n。 

408
00:18:57,950 --> 00:18:58,700
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

409
00:18:58,700 --> 00:19:00,380
So when I have an exponent here, I
所以当我在这里有指数时

410
00:19:00,380 --> 00:19:03,430
can pull it out in front of the log as a constant factor.
可以将其作为恒定因子拉出日志的前面。 

411
00:19:03,430 --> 00:19:10,471
So this is the same thing as 100 log n.
因此，这与100 log n相同。 

412
00:19:10,471 --> 00:19:10,970
OK.
好。 

413
00:19:10,970 --> 00:19:19,809
Now if I have the logarithm to the base using base 5 of n--
现在，如果我使用n的以5为底的对数， 

414
00:19:19,809 --> 00:19:20,639
How about this?
这个怎么样？ 

415
00:19:20,640 --> 00:19:26,412



416
00:19:26,412 --> 00:19:27,855
AUDIENCE: [INAUDIBLE] multiply.
听众：[听不清]相乘。 

417
00:19:27,855 --> 00:19:29,779
That's just log n?
那只是登录n？ 

418
00:19:29,779 --> 00:19:30,609
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

419
00:19:30,609 --> 00:19:32,559
So this is-- can you say that again?
这是-您能再说一遍吗？ 

420
00:19:32,559 --> 00:19:33,529
AUDIENCE: Log n.
听众：登录n。 

421
00:19:33,529 --> 00:19:34,279
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

422
00:19:34,279 --> 00:19:39,259
So this is theta of log n because it is--
所以这是log n的theta，因为它是- 

423
00:19:39,259 --> 00:19:41,359
AUDIENCE: Log n over log 5.
听众：在日志5上登录n。 

424
00:19:41,359 --> 00:19:48,159
VICTOR COSTAN: So that's log n over log 5.
维克托·科斯坦（VICTOR COSTAN）：那是第5个日志n。 

425
00:19:48,160 --> 00:19:51,409
So exponents inside the logs turn into constant factors,
因此，原木内部的指数变成恒定因子， 

426
00:19:51,609 --> 00:19:55,329
bases turn into constant factors.
基础变成恒定因素。 

427
00:19:55,329 --> 00:19:58,389
So if you have an ugly expression inside a logarithm,
因此，如果对数中有一个丑陋的表达式， 

428
00:19:58,390 --> 00:19:59,819
you can, most of the time, simplify it
您大多数时候都可以简化它

429
00:20:00,019 --> 00:20:01,060
to something really nice.
真的很棒

430
00:20:01,060 --> 00:20:04,389
And this contributes to the fact that these
这有助于这些事实

431
00:20:04,390 --> 00:20:07,563
are the only functions that you will see when the answer is
是答案时您将看到的唯一功能

432
00:20:07,763 --> 00:20:09,179
cleaned up in asymptotic notation.
以渐近符号进行清理。 

433
00:20:09,180 --> 00:20:13,941



434
00:20:13,941 --> 00:20:14,440
OK.
好。 

435
00:20:14,440 --> 00:20:14,660
Yes?
是？ 

436
00:20:14,660 --> 00:20:16,201
AUDIENCE: So when you're writing log,
听众：所以当您写日志时， 

437
00:20:16,201 --> 00:20:18,451
are you assuming the second base then?
那你是在假设第二个基地吗？ 

438
00:20:18,451 --> 00:20:20,660
VICTOR COSTAN: Yes, there is a certain base for logs.
维克多·科斯坦：是的，有一定的日志基础。 

439
00:20:20,660 --> 00:20:21,820
We're all computer scientists.
我们都是计算机科学家。 

440
00:20:22,020 --> 00:20:22,519
Right?
对？ 

441
00:20:22,519 --> 00:20:25,212
So what's the natural base for our logarithms?
那么对数的自然基础是什么？ 

442
00:20:25,212 --> 00:20:26,098
AUDIENCE: 2.
听众：2。 

443
00:20:26,098 --> 00:20:27,429
2D.
 2D 

444
00:20:27,430 --> 00:20:28,149
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

445
00:20:28,349 --> 00:20:29,879
Sweet.
甜。 

446
00:20:29,880 --> 00:20:31,486
Math major?
数学专业？ 

447
00:20:31,486 --> 00:20:33,579
AUDIENCE: No, you know I always heard natural base--
听众：不，你知道我总是听自然的话- 

448
00:20:33,779 --> 00:20:34,529
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

449
00:20:34,529 --> 00:20:35,799
Yeah, it's a math joke.
是的，这是一个数学笑话。 

450
00:20:35,799 --> 00:20:39,579
So for everyone else a natural logarithm is in base E.
因此，对于其他所有人，自然对数位于E底。 

451
00:20:39,579 --> 00:20:42,490
For us CS people, a natural base is 2,
对于我们CS人士来说，自然基础是2 

452
00:20:42,490 --> 00:20:46,579
because that's how many values you have for a bit.
因为这就是您拥有多少个值。 

453
00:20:46,579 --> 00:20:54,819
So log means log n is to log base 2 of n.
因此log表示log n是以n为底的2。 

454
00:20:54,819 --> 00:20:57,436



455
00:20:57,436 --> 00:20:59,019
The good news is that most of the time
好消息是，大多数时候

456
00:20:59,019 --> 00:21:00,644
we're working with asymptotic notation,
我们正在使用渐近符号， 

457
00:21:00,644 --> 00:21:01,839
so it doesn't really matter.
所以这并不重要。 

458
00:21:01,839 --> 00:21:04,669
We can communicate with our math friends,
我们可以与数学朋友交流， 

459
00:21:04,670 --> 00:21:08,371
and we don't have to talk about this.
而且我们不必谈论这个。 

460
00:21:08,371 --> 00:21:08,669
OK.
好。 

461
00:21:08,869 --> 00:21:12,059
I need to get another complicated example.
我需要再举一个复杂的例子。 

462
00:21:12,059 --> 00:21:13,589
And my memory fails me.
我的记忆使我失望。 

463
00:21:13,589 --> 00:21:17,518



464
00:21:17,518 --> 00:21:18,018
OK.
好。 

465
00:21:18,018 --> 00:21:22,450



466
00:21:22,450 --> 00:21:27,200
So log-- See, I'm using Ln to mean the math
日志-看，我用Ln表示数学

467
00:21:27,200 --> 00:21:28,649
natural logarithm.
自然对数。 

468
00:21:28,849 --> 00:21:33,074
So we still have that somewhere in here.
所以我们仍然在这里的某个地方。 

469
00:21:33,075 --> 00:21:39,569
Of log n to the base 100.
以n为底的log 100。 

470
00:21:39,569 --> 00:21:42,299
They made me add all these parentheses in the last section
他们让我在上一节中添加所有这些括号

471
00:21:42,299 --> 00:21:45,109
to be clear, so I'm adding them now from the start.
清楚一点，所以我现在要从头开始添加它们。 

472
00:21:45,109 --> 00:21:46,789
Who wants to help me clean this up?
谁想帮我清理一下？ 

473
00:21:46,789 --> 00:21:49,799



474
00:21:49,799 --> 00:21:50,495
Yes?
是？ 

475
00:21:50,496 --> 00:21:51,598
AUDIENCE: Log, log n.
听众：登录，登录n。 

476
00:21:51,798 --> 00:21:52,839
VICTOR COSTAN: All right.
维克多·科斯坦：好的。 

477
00:21:52,839 --> 00:21:55,939
Wow, one step.
哇，一步。 

478
00:21:55,940 --> 00:22:03,200
Log, log n OK.
登录，登录n确定。 

479
00:22:03,200 --> 00:22:05,931
Can you tell me why, very quickly?
你能很快告诉我为什么吗？ 

480
00:22:05,931 --> 00:22:08,346
AUDIENCE: So we can simplify out the base and the exponent
听众：这样我们可以简化基础和指数

481
00:22:08,346 --> 00:22:08,846
in there.
在那里。 

482
00:22:08,846 --> 00:22:09,663
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

483
00:22:09,663 --> 00:22:10,329
AUDIENCE: Then--
听众：然后- 

484
00:22:10,329 --> 00:22:11,538
VICTOR COSTAN: Base goes out.
维克多·科斯坦：基地出局了。 

485
00:22:11,538 --> 00:22:12,880
Exponent goes out.
指数消失。 

486
00:22:12,880 --> 00:22:15,976
AUDIENCE: Log, log of something is another [INAUDIBLE].
听众：日志，某物的日志是另一个[听不清]。 

487
00:22:16,176 --> 00:22:17,259
It's not exactly up there.
它不完全在那儿。 

488
00:22:17,259 --> 00:22:17,744
But can you--
但是你能- 

489
00:22:17,744 --> 00:22:18,535
VICTOR COSTAN: Yep.
维克多·科斯坦：是的。 

490
00:22:18,536 --> 00:22:20,170
AUDIENCE: --occassionally [INAUDIBLE].
听众：-有时[听不清]。 

491
00:22:20,170 --> 00:22:21,470
VICTOR COSTAN: Yep.
维克多·科斯坦：是的。 

492
00:22:21,470 --> 00:22:23,680
What does a theory student say when they're drowning?
一个理论专业的学生在溺水时怎么说？ 

493
00:22:23,680 --> 00:22:26,720



494
00:22:26,720 --> 00:22:28,089
Log, log, log, log.
记录，记录，记录，记录。 

495
00:22:28,089 --> 00:22:31,209
Some of you are laughing already, because know this.
你们中有些人已经在笑，因为知道这一点。 

496
00:22:31,210 --> 00:22:31,710
OK.
好。 

497
00:22:31,710 --> 00:22:33,900
What if I want to make this a little bit harder?
如果我想加重一点该怎么办？ 

498
00:22:33,900 --> 00:22:45,551
And I say log [INAUDIBLE] 5 of log n to the 100.
我说登录n的[听不清] 5到100。 

499
00:22:45,751 --> 00:22:47,210
You have to do a bit more work now,
您现在需要做更多的工作， 

500
00:22:47,210 --> 00:22:49,000
you can't just use the tricks on the right.
您不能只使用右侧的技巧。 

501
00:22:49,000 --> 00:22:53,470



502
00:22:53,470 --> 00:22:55,980
Anyone else?
还有谁？ 

503
00:22:55,980 --> 00:22:56,490
Yes?
是？ 

504
00:22:56,490 --> 00:22:57,930
AUDIENCE: It's still log, log n.
听众：它仍然是日志，请登录n。 

505
00:22:57,930 --> 00:22:58,680
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

506
00:22:58,680 --> 00:23:00,546
It is still log, log n.
它仍然是日志，日志n。 

507
00:23:00,546 --> 00:23:01,670
But for a different reason.
但是出于另一个原因。 

508
00:23:01,670 --> 00:23:03,294
Right?
对？ 

509
00:23:03,294 --> 00:23:04,650
AUDIENCE: [INAUDIBLE].
听众：[听不清]。 

510
00:23:04,650 --> 00:23:06,009
VICTOR COSTAN: Almost.
维克多·科斯坦：差不多了。 

511
00:23:06,009 --> 00:23:06,690
OK.
好。 

512
00:23:06,690 --> 00:23:07,509
Maybe not.
也许不吧。 

513
00:23:07,509 --> 00:23:12,269
So the base still goes out just like before.
因此，基地仍然像以前一样熄灭。 

514
00:23:12,269 --> 00:23:14,920
But this guy now goes out here.
但是这个家伙现在出去了。 

515
00:23:14,920 --> 00:23:20,899
So I will have this be, sort of like-- Notice
所以我会有这样的样子-注意

516
00:23:21,099 --> 00:23:22,669
that I'm not saying equal, I'm saying
我不是说平等，我是说

517
00:23:22,670 --> 00:23:24,389
like because I got rid of the base.
就像是因为我摆脱了基地。 

518
00:23:24,589 --> 00:23:39,789
So it's like 100 times log n, which is log 100 plus log,
就像100次log n，即log 100加log， 

519
00:23:39,789 --> 00:23:40,779
log n.
登录

520
00:23:40,779 --> 00:23:43,750



521
00:23:43,750 --> 00:23:47,039
And this is a constant factor, this grows as n grows.
这是一个常数，随着n的增加而增加。 

522
00:23:47,039 --> 00:23:49,740
So this is going to become incredibly small
所以这将变得非常小

523
00:23:49,740 --> 00:23:52,960
as n becomes larger and larger, so I can get rid of it.
随着n变得越来越大，我可以摆脱它。 

524
00:23:52,960 --> 00:23:55,980



525
00:23:55,980 --> 00:23:56,480
OK?
好？ 

526
00:23:56,480 --> 00:23:59,720



527
00:23:59,720 --> 00:24:00,730
OK.
好。 

528
00:24:00,730 --> 00:24:03,009
One more, and this one's going to be less boring.
再来一遍，这样就不会那么无聊了。 

529
00:24:03,009 --> 00:24:06,979
AUDIENCE: [INAUDIBLE] out into a separate term-- the log of 100?
听众：[听不清]变成一个单独的词-对数100？ 

530
00:24:06,979 --> 00:24:09,046
Going from it in the last step, how
在最后一步，如何

531
00:24:09,046 --> 00:24:11,889
are you able to cross that out?
你能解决这个问题吗？ 

532
00:24:12,089 --> 00:24:15,909
VICTOR COSTAN: If my memory-- If my memory works, I think,
维克多·科斯坦：如果我的记忆-如果我的记忆正常， 

533
00:24:15,910 --> 00:24:21,017
log of a b is log a plus log b.
 ab的日志是log a加日志b。 

534
00:24:21,017 --> 00:24:21,524
AUDIENCE: Gotcha.
听众：Gotcha。 

535
00:24:21,724 --> 00:24:22,964
VICTOR COSTAN: Am I right guys?
维克多·科斯坦：我对吗？ 

536
00:24:22,964 --> 00:24:23,464
Sweet.
甜。 

537
00:24:23,464 --> 00:24:29,619



538
00:24:29,619 --> 00:24:30,769
Good question.
好问题。 

539
00:24:30,769 --> 00:24:33,009
I wasn't sure, but now that you asked,
我不确定，但是现在你问， 

540
00:24:33,009 --> 00:24:35,339
everyone else helped me make sure it's right.
其他所有人都帮助我确保它是正确的。 

541
00:24:35,339 --> 00:24:43,789



542
00:24:43,789 --> 00:24:44,289
OK.
好。 

543
00:24:44,289 --> 00:24:45,705
I'm erasing so much, because we're
我擦除的太多了，因为我们

544
00:24:45,705 --> 00:24:47,939
going to need more room for this.
为此需要更多空间。 

545
00:24:47,940 --> 00:24:50,889
So I have a log again, but this time what I have inside the log
所以我又有了一个日志，但是这次我的日志里面有什么

546
00:24:51,089 --> 00:24:56,789
is n choose n over 2.
是n在2中选择n。 

547
00:24:56,789 --> 00:24:59,730
Does any brave soul want to come up here and solve this for me?
是否有任何勇敢的灵魂想来这里为我解决这个问题？ 

548
00:24:59,730 --> 00:25:08,134



549
00:25:08,134 --> 00:25:08,634
No?
没有？ 

550
00:25:08,634 --> 00:25:12,319



551
00:25:12,319 --> 00:25:14,962
You guys are going to make me write for the entire hour?
你们要让我整整写一遍吗？ 

552
00:25:14,962 --> 00:25:16,894
[LAUGHTER]
 [笑声] 

553
00:25:16,894 --> 00:25:19,792



554
00:25:19,792 --> 00:25:23,159
VICTOR COSTAN: I'll offer help.
维克多·科斯坦：我会提供帮助。 

555
00:25:23,160 --> 00:25:25,404
AUDIENCE: It's n-- [INAUDIBLE]
听众：n-- [听不清] 

556
00:25:25,404 --> 00:25:26,529
VICTOR COSTAN: So this is--
维克多·科斯坦：这就是- 

557
00:25:26,529 --> 00:25:28,608
AUDIENCE: Is that n factorial over --
听众：那是阶乘- 

558
00:25:28,608 --> 00:25:29,399
VICTOR COSTAN: Yep.
维克多·科斯坦：是的。 

559
00:25:29,400 --> 00:25:31,980
AUDIENCE: --n divided by 2 factorial?
听众：--n除以2阶乘？ 

560
00:25:31,980 --> 00:25:37,250
VICTOR COSTAN: n factorial over n divided by 2 factorial,
 VICTOR COSTAN：n阶乘n阶除以2阶乘， 

561
00:25:37,250 --> 00:25:40,119
times n divided by 2 factorial.
 n乘以2阶乘

562
00:25:40,119 --> 00:25:40,619
Close.
关。 

563
00:25:40,619 --> 00:25:43,250



564
00:25:43,250 --> 00:25:46,170
And I'll give up another hint, which
我将放弃另一个提示， 

565
00:25:46,170 --> 00:25:49,950
is that n factorial can be approximated
是n阶乘可以近似吗

566
00:25:49,950 --> 00:25:56,420
as square root of 2pi n multiplied by n over E divided
作为2pi n的平方根乘以E上的n除

567
00:25:56,420 --> 00:25:57,869
by n to the power of n.
由n乘以n的幂。 

568
00:25:58,069 --> 00:25:59,869
But I think this will make you guys not
但是我认为这会让你们不

569
00:25:59,869 --> 00:26:01,459
want to come up and solve this.
想要解决这个问题。 

570
00:26:01,460 --> 00:26:02,018
Yes?
是？ 

571
00:26:02,018 --> 00:26:03,101
AUDIENCE: OK. [INAUDIBLE].
听众：好的。 [听不清]。 

572
00:26:03,101 --> 00:26:05,970



573
00:26:05,970 --> 00:26:08,919
VICTOR COSTAN: I was-- Is that it?
维克多·科斯坦：我是-是吗？ 

574
00:26:09,119 --> 00:26:10,489
Is that not it?
是不是

575
00:26:10,490 --> 00:26:12,170
Did I get it wrong?
我弄错了吗？ 

576
00:26:12,170 --> 00:26:12,885
OK.
好。 

577
00:26:12,885 --> 00:26:16,539
AUDIENCE: [INAUDIBLE] minus n.
听众：[听不清]减n。 

578
00:26:16,539 --> 00:26:18,889
VICTOR COSTAN: I think that's an asymptotic.
维克多·科斯坦：我认为这是渐近的。 

579
00:26:18,890 --> 00:26:22,259
That's what we'll-- I think we'll get to that.
那就是我们要做的-我认为我们会做到的。 

580
00:26:22,259 --> 00:26:23,775
But factorials grow exponentially.
但是阶乘以指数级增长。 

581
00:26:23,775 --> 00:26:26,450



582
00:26:26,450 --> 00:26:30,201
So it should be something like this.
所以应该是这样的。 

583
00:26:30,201 --> 00:26:30,700
OK.
好。 

584
00:26:30,700 --> 00:26:33,210
So we have that nice approximation.
因此，我们有一个很好的近似值。 

585
00:26:33,210 --> 00:26:35,680
Does anyone want to work it out, or will I have to do it?
是否有人想解决这个问题，还是我必须做？ 

586
00:26:35,680 --> 00:26:38,573



587
00:26:38,773 --> 00:26:41,349
I'll keep that in mind when I'm grading your homework.
在为您的作业评分时，我会记住这一点。 

588
00:26:41,349 --> 00:26:42,480
[LAUGHTER]
 [笑声] 

589
00:26:42,480 --> 00:26:43,230
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

590
00:26:43,230 --> 00:26:53,390
So it's log of square root 2 pi n multiplied by n over 2
就是平方根2 pi n乘以2上的n的对数

591
00:26:53,390 --> 00:26:55,750
to the power of n.
达到n的幂

592
00:26:55,750 --> 00:26:58,140
I'm going to put these two together.
我将把这两个放在一起。 

593
00:26:58,140 --> 00:27:06,720
So 2 pi n over-- There's an n over 2 there, right?
所以2点以上-那里2点以上，对吧？ 

594
00:27:06,720 --> 00:27:16,779
So it's n over 2E times n over 2 to the power of 2.
因此，n是2E乘以n 2乘以2的幂。 

595
00:27:16,779 --> 00:27:22,990



596
00:27:22,990 --> 00:27:27,329
OK, I can get rid of this guy, because it's a constant.
好吧，我可以摆脱这个家伙，因为它是一个常数。 

597
00:27:27,329 --> 00:27:31,804
I can get-- No, I can't get rid of this guy yet.
我可以-不，我还不能摆脱这个家伙。 

598
00:27:31,805 --> 00:27:35,605
AUDIENCE: In the denominator shouldn't it be 2pi n over 2
听众：分母不应该是2分以上2分

599
00:27:35,605 --> 00:27:37,980
under the radical?
在激进之下？ 

600
00:27:37,980 --> 00:27:39,450
VICTOR COSTAN: Yep.
维克多·科斯坦：是的。 

601
00:27:39,450 --> 00:27:42,129
2pi n over 2, so this simplifies.
 2分2分以上，因此简化了。 

602
00:27:42,329 --> 00:27:43,230
OK.
好。 

603
00:27:43,230 --> 00:27:44,750
Thank you.
谢谢。 

604
00:27:44,750 --> 00:27:46,250
AUDIENCE: Square at the bottom term,
观众：最底端的方块， 

605
00:27:46,250 --> 00:27:49,099
you can get rid of the square root on the end--
您可以摆脱最后的平方根- 

606
00:27:49,099 --> 00:27:50,049
VICTOR COSTAN: Yep.
维克多·科斯坦：是的。 

607
00:27:50,049 --> 00:27:53,829
AUDIENCE: --and then cancel the some of the exponents.
听众：-然后取消一些指数。 

608
00:27:53,829 --> 00:27:54,579
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

609
00:27:54,579 --> 00:27:55,745
Do you want to come help me?
你想来帮我吗

610
00:27:55,746 --> 00:27:56,490
AUDIENCE: Sure.
听众：好的。 

611
00:27:56,490 --> 00:27:57,740
VICTOR COSTAN: Thanks so much.
维克多·科斯坦：非常感谢。 

612
00:27:57,740 --> 00:28:05,884



613
00:28:05,884 --> 00:28:06,384
STUDENT: OK.
学生：好的。 

614
00:28:06,384 --> 00:28:09,680
So we can distribute this exponent here to cancel this.
因此，我们可以在此处分配该指数以取消该指数。 

615
00:28:09,680 --> 00:28:19,697
And then we get square root of pi n times n over 2.
然后我们得到pi的平方根乘以n等于2。 

616
00:28:19,897 --> 00:28:23,166
And it'd be n-- sorry about my handwriting.
抱歉-我的笔迹。 

617
00:28:23,166 --> 00:28:25,000
VICTOR COSTAN: I think it's better than mine
维克多·科斯坦：我认为这比我的要好

618
00:28:25,000 --> 00:28:27,759
by quite a bit.
相当多。 

619
00:28:27,759 --> 00:28:32,484
STUDENT: Square root of pi n.
学生：pi的平方根。 

620
00:28:32,484 --> 00:28:34,959
And this is square root squared, so that cancels .
这是平方根平方，因此可以取消。 

621
00:28:34,960 --> 00:28:40,404



622
00:28:40,404 --> 00:28:44,365
Times n over E to the n.
将E上的n乘以n。 

623
00:28:44,365 --> 00:28:49,315



624
00:28:49,315 --> 00:28:51,701
AUDIENCE: Do you need parenthesis around n over 2E?
听众：您是否需要在2E上加上n左右的括号？ 

625
00:28:51,701 --> 00:28:52,285
STUDENT: Yeah.
学生：是的。 

626
00:28:52,285 --> 00:28:54,265
That's probably good.
那可能很好。 

627
00:28:54,265 --> 00:28:58,450
So, since this is n over E to the n, and n over 2E n.
因此，由于这是E之上的n到n之上，而n是2E n之上。 

628
00:28:58,450 --> 00:29:01,210
Well since they're to the n, both the
好吧，既然他们到了n， 

629
00:29:01,210 --> 00:29:05,140
n we can give them a single exponent and cancel stuff.
 n我们可以给他们一个指数并取消它们。 

630
00:29:05,140 --> 00:29:13,910
So we just get square root of pi n to the times 2
所以我们将pi n的平方根乘以2 

631
00:29:13,910 --> 00:29:18,519
the n, over pi n.
 n，超过pi n。 

632
00:29:18,519 --> 00:29:22,892



633
00:29:22,892 --> 00:29:30,665
Can do some more cancelling and just get 2 the n over--
可以做更多的取消，只得到2 n 

634
00:29:30,665 --> 00:29:36,994
Going to simplify this to the n over the square root of n.
将其简化为n的平方根上的n。 

635
00:29:36,994 --> 00:29:39,919
We can take out the pi, because it's in our natural logarithm.
我们可以删除pi，因为它在我们的自然对数中。 

636
00:29:39,920 --> 00:29:41,660
It's a constant factor.
这是一个恒定的因素。 

637
00:29:41,660 --> 00:29:54,980
And this is log of-- and then-- Since it's a log of,
这是-的日志-然后-因为是

638
00:29:54,980 --> 00:29:56,960
it's just log of 2 to the n.
它是2到n的对数。 

639
00:29:56,960 --> 00:30:09,236
So it's-- say since it's log you can turn it into log of 2
所以-说，因为它是对数，您可以将其变成2的对数

640
00:30:09,236 --> 00:30:12,869
to the n minus log of square root of n.
到n减去n的平方根的对数。 

641
00:30:13,069 --> 00:30:15,179
Log of 2 to the n is a much greater complexity
 2到n的对数要复杂得多

642
00:30:15,180 --> 00:30:17,269
than square root of n, so we can--
而不是n的平方根，所以我们可以- 

643
00:30:17,269 --> 00:30:18,173
VICTOR COSTAN: Sweet.
维克多·科斯坦：甜。 

644
00:30:18,173 --> 00:30:20,289
Thank you.
谢谢。 

645
00:30:20,289 --> 00:30:21,139
So see?
看到了吗

646
00:30:21,140 --> 00:30:24,509
Complicated formula-- Even more complicated formula
复杂的公式-甚至更复杂的公式

647
00:30:24,509 --> 00:30:26,369
came out to be one of the numbers
成为其中之一

648
00:30:26,369 --> 00:30:28,259
that I promised it would come out to.
我保证会出来的。 

649
00:30:28,259 --> 00:30:29,470
Thanks for the help.
谢谢您的帮助。 

650
00:30:29,470 --> 00:30:33,319
So you can get rid of the pi as soon as you want to.
因此，您可以根据需要尽快删除pi。 

651
00:30:33,319 --> 00:30:36,119
And this is the last step.
这是最后一步。 

652
00:30:36,119 --> 00:30:37,549
I just want to say it again, just
我只想再说一次

653
00:30:37,549 --> 00:30:39,019
make sure everyone heard it.
确保所有人都听到了。 

654
00:30:39,019 --> 00:30:42,779
So once you get here, you get this,
所以一旦到达这里，就得到了

655
00:30:42,779 --> 00:30:48,309
order n minus log of square root of n,
阶n减去n的平方根的对数， 

656
00:30:48,309 --> 00:31:07,129
which is-- This is-- This is order n minus one half log n.
这是-这是-这是n阶乘以log n的一半。 

657
00:31:07,130 --> 00:31:09,880
And the log n is much smaller than n,
日志n远小于n， 

658
00:31:09,880 --> 00:31:12,176
so this goes away completely.
所以这完全消失了。 

659
00:31:12,376 --> 00:31:13,960
And you get this as your final answer.
而您得到的这就是您的最终答案。 

660
00:31:13,960 --> 00:31:20,450



661
00:31:20,450 --> 00:31:20,950
OK.
好。 

662
00:31:20,950 --> 00:31:21,824
Does this make sense?
这有意义吗？ 

663
00:31:21,824 --> 00:31:27,230



664
00:31:27,230 --> 00:31:28,420
Any questions?
任何问题？ 

665
00:31:28,420 --> 00:31:30,119
Anyone?
任何人？ 

666
00:31:30,319 --> 00:31:34,210
How many people are still paying attention honestly?
多少人仍在诚实地关注？ 

667
00:31:34,210 --> 00:31:35,130
Wow.
哇。 

668
00:31:35,130 --> 00:31:36,331
Nice.
真好

669
00:31:36,531 --> 00:31:37,990
You should come to all my sections.
您应该参加我所有的部分。 

670
00:31:37,990 --> 00:31:59,890



671
00:31:59,890 --> 00:32:00,390
OK.
好。 

672
00:32:00,390 --> 00:32:02,410
Let's talk about something we covered in class.
让我们谈谈我们在课堂上讨论的内容。 

673
00:32:02,410 --> 00:32:03,619
Let's talk about peak finding.
让我们谈谈寻峰。 

674
00:32:03,819 --> 00:32:05,559
And we'll start with 1D peak finding,
我们将从一维峰发现开始， 

675
00:32:05,559 --> 00:32:08,000
and then we'll go to 2D peak finding.
然后我们将进行2D峰发现。 

676
00:32:08,000 --> 00:32:11,316
So does anyone remember the pseudocode for the faster 1D
有人会记住更快的1D伪代码吗

677
00:32:11,316 --> 00:32:12,440
peak finding by any chance?
找峰吗？ 

678
00:32:12,440 --> 00:32:16,559



679
00:32:16,559 --> 00:32:18,659
ID peak finding.
 ID峰发现。 

680
00:32:18,660 --> 00:32:22,220



681
00:32:22,220 --> 00:32:24,269
I think everyone said they went to lecture,
我想每个人都说他们去听课了， 

682
00:32:24,269 --> 00:32:26,579
so I don't have to explain what peak finding is, right?
所以我不必解释什么是峰值发现，对吗？ 

683
00:32:26,579 --> 00:32:30,460



684
00:32:30,460 --> 00:32:30,960
OK.
好。 

685
00:32:30,960 --> 00:32:32,669
So that's go for it.
这样就可以了。 

686
00:32:32,869 --> 00:32:36,319
So suppose I have a few numbers--
所以假设我有几个数字

687
00:32:36,319 --> 00:32:48,369
3-- let me write this one-- 3, 4, 5, 6, 7, 6, 5, 4.
 3-让我写这个-3、4、5、6、7、6、5、4 

688
00:32:48,369 --> 00:32:52,889
So the peak finding problem says there's an array of numbers,
因此，寻峰问题表明其中存在一系列数字， 

689
00:32:52,890 --> 00:32:54,409
and I want to find the local peak.
我想找到当地的山峰

690
00:32:54,609 --> 00:32:56,719
And the local peak is a number that's
而当地的高峰是

691
00:32:56,720 --> 00:33:01,039
surrounded by numbers that are smaller or equal to it.
用小于或等于它的数字包围。 

692
00:33:01,039 --> 00:33:05,720
So there shouldn't be any larger numbers than it.
因此，不应有比它大的数字。 

693
00:33:05,720 --> 00:33:10,355
And I want to find a peak as quickly as I can.
我想尽快找到一个高峰。 

694
00:33:10,355 --> 00:33:12,480
So what's the faster algorithm that we talked about
那么我们所说的更快的算法是什么

695
00:33:12,480 --> 00:33:12,980
in lecture?
在演讲中？ 

696
00:33:12,980 --> 00:33:17,730



697
00:33:17,730 --> 00:33:18,169
Yes?
是？ 

698
00:33:18,369 --> 00:33:18,869
OK.
好。 

699
00:33:18,869 --> 00:33:22,377
You didn't answer, right, as much, at least so.
至少，您没有回答，对，至少如此。 

700
00:33:22,377 --> 00:33:23,389
AUDIENCE: Binary search?
受众：二进制搜索？ 

701
00:33:23,390 --> 00:33:24,140
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

702
00:33:24,140 --> 00:33:25,639
It's exactly like binary search.
就像二进制搜索一样。 

703
00:33:25,839 --> 00:33:27,269
Yep.
是的

704
00:33:27,269 --> 00:33:29,740
Do you wanna help me write the pseudocode?
您想帮助我编写伪代码吗？ 

705
00:33:29,740 --> 00:33:31,088
You can tell me what it is.
你可以告诉我这是什么。 

706
00:33:31,088 --> 00:33:31,713
AUDIENCE: Sure.
听众：好的。 

707
00:33:31,713 --> 00:33:34,289
So, I guess well start in the middle.
所以，我想从中间开始。 

708
00:33:34,289 --> 00:33:35,039
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

709
00:33:35,039 --> 00:33:37,549



710
00:33:37,549 --> 00:33:40,309
Start in the middle.
从中间开始。 

711
00:33:40,309 --> 00:33:43,929



712
00:33:43,930 --> 00:33:46,334
If you-- If you write this on your Pset
如果您-如果将其写在Pset上

713
00:33:46,334 --> 00:33:48,250
you might want to be a little bit more formal.
您可能想要更正式一点。 

714
00:33:48,250 --> 00:33:49,410
Someone asked about proofs.
有人问证据。 

715
00:33:49,410 --> 00:33:51,730
I would say something like, start
我会说开始

716
00:33:51,730 --> 00:33:54,500
by looking at the middle element of the array.
通过查看数组的中间元素。 

717
00:33:54,500 --> 00:33:57,529
Same thing though.
虽然一样。 

718
00:33:57,529 --> 00:33:58,639
OK.
好。 

719
00:33:58,640 --> 00:34:02,160
So let's pretend this is the middle.
因此，让我们假装这是中间的。 

720
00:34:02,160 --> 00:34:04,480
Now it is.
现在它是。 

721
00:34:04,480 --> 00:34:05,567
What do I do?
我该怎么办？ 

722
00:34:05,567 --> 00:34:09,869
AUDIENCE: Then you can check one side in the middle.
听众：然后您可以检查中间的一侧。 

723
00:34:09,869 --> 00:34:11,719
So it's [INAUDIBLE] the right side.
因此，它在[音频不清晰]右侧。 

724
00:34:11,719 --> 00:34:12,468
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

725
00:34:12,469 --> 00:34:13,981
I'm looking at the right side.
我在看右边。 

726
00:34:13,981 --> 00:34:16,250
I see a 7 there, so I know for sure
我在那里看到7，所以我肯定知道

727
00:34:16,250 --> 00:34:17,760
that this is not a local peak.
这不是本地高峰。 

728
00:34:17,760 --> 00:34:19,389
Right?
对？ 

729
00:34:19,389 --> 00:34:21,268
What do I do now?
现在我该怎么做？ 

730
00:34:21,467 --> 00:34:26,703
AUDIENCE: So now you can start over, and using 7.
听众：现在您可以重新开始并使用7。 

731
00:34:26,704 --> 00:34:27,659
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

732
00:34:27,659 --> 00:34:29,559
What if-- This would be small.
如果-那会很小。 

733
00:34:29,559 --> 00:34:32,900
What if I would look at 5 first?
如果我先看5怎么办？ 

734
00:34:32,900 --> 00:34:35,860
Or you should I look at the other side too?
还是我也应该看看另一侧？ 

735
00:34:35,860 --> 00:34:38,483
AUDIENCE: Well you don't have to in this case, but if you--
听众：嗯，在这种情况下您不必这样做，但是如果您- 

736
00:34:38,483 --> 00:34:40,697
But if 7 were smaller then you would
但是如果7小一些

737
00:34:40,896 --> 00:34:42,768
go and look at the other side, and check
去看看另一边，然后检查

738
00:34:42,768 --> 00:34:44,109
to see if 5 is also smaller.
看看5是否也更小。 

739
00:34:44,110 --> 00:34:46,579
In that case you've already found the peak.
在那种情况下，您已经找到了顶峰。 

740
00:34:46,579 --> 00:34:47,329
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

741
00:34:47,329 --> 00:34:51,469
So I have to look at both sides and make sure-- if none of them
因此，我必须审视双方，并确保-如果没有一个

742
00:34:51,469 --> 00:34:52,929
is smaller, than I-- I'm sorry.
比我小-对不起。 

743
00:34:52,929 --> 00:34:54,989
If none of them is bigger, I found the peak.
如果没有一个更大，我就找到了顶峰。 

744
00:34:54,989 --> 00:35:00,340
If any of them is bigger then I can go whichever way I want.
如果其中任何一个更大，那么我可以按照自己想要的方式走。 

745
00:35:00,340 --> 00:35:03,789
So I saw my 7, I'm going to cut this in half.
所以我看到了我的7，我将其切成两半。 

746
00:35:03,989 --> 00:35:05,651
And now I look at this.
现在我看看这个。 

747
00:35:05,652 --> 00:35:06,610
You were saying, right?
你是说吧

748
00:35:06,610 --> 00:35:10,650



749
00:35:10,650 --> 00:35:13,139
So look at the neighbors-- By the way,
所以看看邻居-顺便说一句， 

750
00:35:13,139 --> 00:35:14,699
can anyone understand my handwriting?
谁能理解我的笔迹？ 

751
00:35:14,699 --> 00:35:17,829
Is it even worth bothering to write?
还要值得去写吗？ 

752
00:35:17,829 --> 00:35:19,090
AUDIENCE: It's pretty good.
听众：很好。 

753
00:35:19,090 --> 00:35:19,960
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

754
00:35:20,159 --> 00:35:21,059
I see three nods.
我看到三个点头。 

755
00:35:21,059 --> 00:35:24,181
I'm going to write for those three people.
我要为那三个人写信。 

756
00:35:24,181 --> 00:35:25,679
AUDIENCE: It's just we haven't taken
听众：只是我们还没拿

757
00:35:25,679 --> 00:35:27,857
any cursive in about 12 years.
在大约12年内可以找到任何草书。 

758
00:35:27,858 --> 00:35:29,630
So--
所以 - 

759
00:35:29,829 --> 00:35:30,579
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

760
00:35:30,579 --> 00:35:31,559
Thanks.
谢谢。 

761
00:35:31,559 --> 00:35:33,590
Not feeling well at all.
一点都不舒服。 

762
00:35:33,590 --> 00:35:37,346
OK look at neighbors, figure out if you're a peak.
好看看邻居，弄清楚你是不是高峰。 

763
00:35:37,346 --> 00:35:39,469
You're one of the people that said you can read it,
您是可以阅读的人之一， 

764
00:35:39,469 --> 00:35:42,419
so now there's only two people that can read my handwriting
所以现在只有两个人可以阅读我的笔迹

765
00:35:42,420 --> 00:35:43,139
and that I like.
而且我喜欢。 

766
00:35:43,139 --> 00:35:45,179
[LAUGHTER]
 [笑声] 

767
00:35:45,179 --> 00:35:47,109
VICTOR COSTAN: Look at the neighbors.
维克多·科斯坦：看看邻居。 

768
00:35:47,110 --> 00:35:48,539
See if local peak.
看看是否有本地高峰。 

769
00:35:48,539 --> 00:35:52,279



770
00:35:52,280 --> 00:35:57,960
And if not, figure out which way to go in.
如果没有，请弄清楚该走哪条路。 

771
00:35:58,159 --> 00:36:01,079



772
00:36:01,079 --> 00:36:03,849
And I'll say if not recurse.
我会说如果不递归的话。 

773
00:36:03,849 --> 00:36:06,739



774
00:36:06,739 --> 00:36:09,929
So what's the running time for this?
那么，这是什么时间？ 

775
00:36:09,929 --> 00:36:12,250
Suppose I have n elements to start with,
假设我有n个元素开始， 

776
00:36:12,250 --> 00:36:13,659
that's my array size.
那是我的数组大小。 

777
00:36:13,659 --> 00:36:19,583
I will use t of n as my running time.
我将使用n的t作为我的跑步时间。 

778
00:36:19,583 --> 00:36:22,000
So to figure out the running time for the whole algorithm,
因此，要弄清楚整个算法的运行时间， 

779
00:36:22,000 --> 00:36:23,889
I have to look at the running time for each step
我必须查看每个步骤的运行时间

780
00:36:23,889 --> 00:36:24,659
and add them up.
并将它们加起来。 

781
00:36:24,659 --> 00:36:26,099
Right?
对？ 

782
00:36:26,099 --> 00:36:29,009
What's the running time for the first step?
第一步的运行时间是多少？ 

783
00:36:29,010 --> 00:36:29,940
Looking in the middle.
看着中间。 

784
00:36:29,940 --> 00:36:34,349



785
00:36:34,349 --> 00:36:37,779
AUDIENCE: [INAUDIBLE] the middle elements.
听众：[听不清]中间元素。 

786
00:36:37,780 --> 00:36:38,519
VICTOR COSTAN: 1.
维克多·科斯坦：1。 

787
00:36:38,519 --> 00:36:39,019
1.
 1。 

788
00:36:39,019 --> 00:36:40,610
I would not say 0.
我不会说0。 

789
00:36:40,610 --> 00:36:41,900
I still have to look at it.
我还是要看。 

790
00:36:41,900 --> 00:36:46,940
Or to be on the safe side you say 1, theta of 1.
或为了安全起见，您说1，theta。 

791
00:36:46,940 --> 00:36:49,530
It's a constant.
这是一个常数。 

792
00:36:49,530 --> 00:36:50,030
OK.
好。 

793
00:36:50,030 --> 00:36:51,530
Now I have to look at the neighbors,
现在我要看看邻居

794
00:36:51,530 --> 00:36:54,150
and I have to see if one of them is bigger or not.
我必须看看其中一个是否更大。 

795
00:36:54,150 --> 00:36:56,030
How about that?
那个怎么样？ 

796
00:36:56,030 --> 00:36:56,918
How much time is left?
还剩多少时间？ 

797
00:36:57,117 --> 00:37:00,049



798
00:37:00,050 --> 00:37:01,440
I heard the constant.
我听到了不断。 

799
00:37:01,440 --> 00:37:02,670
OK.
好。 

800
00:37:02,670 --> 00:37:05,230
Very soft voice, but I heard a constant there,
声音很柔和，但我听到那里常有声音， 

801
00:37:05,429 --> 00:37:07,819
so I'm going to take it.
所以我要接受它。 

802
00:37:07,820 --> 00:37:11,054
So this guy is a constant.
所以这个家伙是一个常数。 

803
00:37:11,253 --> 00:37:12,670
If it's a local, if you come down.
如果是当地人，那就下来吧。 

804
00:37:12,670 --> 00:37:15,750
If it's not a local peak, what's the running time for this?
如果不是本地高峰，那么运行时间是多少？ 

805
00:37:15,750 --> 00:37:22,146



806
00:37:22,146 --> 00:37:25,750
n over 2, since--
 n大于2，因为- 

807
00:37:25,750 --> 00:37:28,250
AUDIENCE: If you FOIL that you divide by [INAUDIBLE], right?
听众：如果您觉得自己被[音频不清晰]除以对，对吗？ 

808
00:37:28,250 --> 00:37:29,179
VICTOR COSTAN: Yep.
维克多·科斯坦：是的。 

809
00:37:29,179 --> 00:37:30,809
So I'm looking at this guy.
所以我在看这个人。 

810
00:37:30,809 --> 00:37:32,916
It's clearly not a peak.
显然这不是高峰。 

811
00:37:32,916 --> 00:37:34,539
So I'm going to look on the right side,
所以我要看右边

812
00:37:34,539 --> 00:37:37,329
because I see a 7 here that's bigger than a 6.
因为我看到这里的7比6大。 

813
00:37:37,329 --> 00:37:40,590
So now I have the same problem, except my array size just
所以现在我有同样的问题，除了我的数组大小

814
00:37:40,590 --> 00:37:42,289
dropped to half.
下降到一半。 

815
00:37:42,289 --> 00:37:46,389
So same problem, because I already have a name for it,
同样的问题，因为我已经有个名字了， 

816
00:37:46,389 --> 00:37:50,109
except the input size is different.
除了输入大小不同。 

817
00:37:50,110 --> 00:37:56,130
So the running time for this entire step is theta of 1
因此，整个步骤的运行时间为1 

818
00:37:56,130 --> 00:37:59,539
plus T of n over 2.
加T大于2。 

819
00:37:59,539 --> 00:38:01,650
So the running time for the whole thing
所以整个事情的运行时间

820
00:38:01,650 --> 00:38:07,769
is-- I should have said theta of 1 here, sorry.
是-我应该在这里说1的theta，对不起。 

821
00:38:07,769 --> 00:38:13,889
So theta of 1 plus theta of 1 plus T of n over 2.
所以1的theta加上1的theta加上n的T超过2。 

822
00:38:13,889 --> 00:38:22,460
So this is theta 1 plus T of n over 2.
所以这是theta 1加上n在2之上的T 

823
00:38:22,460 --> 00:38:24,329
So I wrote out my pseudocode, looked
所以我写了我的伪代码，看着

824
00:38:24,329 --> 00:38:26,460
at the running time for each step, added them up.
在每个步骤的运行时间，将它们加起来。 

825
00:38:26,460 --> 00:38:30,630
Now I have a recurrence, and I have to solve it.
现在我复发了，我必须解决它。 

826
00:38:30,630 --> 00:38:32,460
Let's solve it.
让我们解决它。 

827
00:38:32,460 --> 00:38:34,449
We sort of glossed over that in lectures,
我们在演讲中对此有所掩饰， 

828
00:38:34,449 --> 00:38:36,980
so we're going to do it now.
所以我们现在就要做。 

829
00:38:36,980 --> 00:38:46,150



830
00:38:46,150 --> 00:38:52,619
So T of n equals theta of 1 plus T of n over 2.
因此，n的T等于1的theta加上2上的n的T。 

831
00:38:52,619 --> 00:38:56,219
I'm going to expand this using the definition.
我将使用定义对此进行扩展。 

832
00:38:56,219 --> 00:39:01,839
And theta of one is long, so I'm going to call this c instead.
而且一个的theta很长，所以我改称它为c。 

833
00:39:01,840 --> 00:39:04,059
It's a constant, right?
这是一个常数，对吗？ 

834
00:39:04,059 --> 00:39:09,509
So c plus-- expanding this-- c plus T of n over 4.
所以c加-扩展-c加n的T超过4。 

835
00:39:09,510 --> 00:39:10,880
I'm going to expand it again.
我将再次对其进行扩展。 

836
00:39:11,079 --> 00:39:16,670



837
00:39:16,670 --> 00:39:25,530
And again-- Anyone getting bored of this?
再说一遍，有人对此感到无聊吗？ 

838
00:39:25,530 --> 00:39:31,019
So if I expand it a lot of times, I'm going to get i times
所以如果我扩展很多次，我会得到很多次

839
00:39:31,019 --> 00:39:35,911
c, plus T of n divided by 2 to the n.
 c，n的T加2除以n。 

840
00:39:35,911 --> 00:39:37,369
And you can expand it as many times
您可以扩展多次

841
00:39:37,369 --> 00:39:39,119
as you want until we see the pattern,
根据您的意愿，直到我们看到图案， 

842
00:39:39,119 --> 00:39:41,949
but this is the pattern.
但这是模式。 

843
00:39:41,949 --> 00:39:43,199
So I have a recurrence.
所以我复发了。 

844
00:39:43,199 --> 00:39:45,769
What else do I need in order to get a function?
我还需要什么才能获得功能？ 

845
00:39:45,769 --> 00:39:47,335
I need a base case.
我需要一个基本案例。 

846
00:39:47,335 --> 00:39:49,709
So the problem size gets smaller and smaller and smaller,
因此问题的大小越来越小， 

847
00:39:49,710 --> 00:39:52,130
but at some point it becomes so small
但在某个时候它变得很小

848
00:39:52,130 --> 00:39:55,079
that I can solve it just by looking at it.
我只要看一下就能解决。 

849
00:39:55,079 --> 00:39:58,929
What's that case?
那是什么情况

850
00:39:58,929 --> 00:40:00,399
AUDIENCE: [INAUDIBLE]
观众：[听不清] 

851
00:40:00,400 --> 00:40:01,150
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

852
00:40:01,150 --> 00:40:04,250
So if I have an array of one element, it's a peak.
因此，如果我有一个元素的数组，那是一个峰值。 

853
00:40:04,250 --> 00:40:04,909
Right?
对？ 

854
00:40:04,909 --> 00:40:05,409
Job done.
任务完成。 

855
00:40:05,409 --> 00:40:08,210



856
00:40:08,210 --> 00:40:15,769
So T of 1 is a constant.
因此T等于1是一个常数。 

857
00:40:15,969 --> 00:40:22,349
So I want to write this in such a way that this becomes this.
所以我想以这样的方式来写这个。 

858
00:40:22,349 --> 00:40:29,679
So I want to figure out an i such that-- Yeah.
所以我想找出一个这样的-是的。 

859
00:40:29,679 --> 00:40:36,769
T of n divided by 2 to the i equals T of 1.
 n的T除以2等于i等于T的1。 

860
00:40:36,769 --> 00:40:38,780
And the easiest way of doing that is
最简单的方法是

861
00:40:38,780 --> 00:40:42,460
to say that n divided by 2 to the i is 1.
说n被2除以i是1。 

862
00:40:42,659 --> 00:40:48,769
So i is the inverse of an exponential-- Anyone?
所以我是指数的倒数-任何人？ 

863
00:40:48,769 --> 00:40:52,534



864
00:40:52,534 --> 00:40:53,250
AUDIENCE: [INAUDIBLE].
听众：[听不清]。 

865
00:40:53,449 --> 00:40:54,949
VICTOR COSTAN: Logarithm, thank you.
维克多·科斯坦：对数，谢谢。 

866
00:40:54,949 --> 00:40:57,569



867
00:40:57,570 --> 00:41:01,269
Log n.
登录n。 

868
00:41:01,469 --> 00:41:05,250
So I have i, and I'm going to plug it back in here.
所以我有我，我要把它重新插入这里。 

869
00:41:05,250 --> 00:41:15,119
And I get constant times log n, plus T of 1, which I know
我得到常数乘以log n，加上T等于1，我知道

870
00:41:15,119 --> 00:41:16,389
is theta of 1.
是1的θ。 

871
00:41:16,389 --> 00:41:19,559



872
00:41:19,559 --> 00:41:22,670
I'm going to make this theta of 1 again.
我将再次使这个θ为1。 

873
00:41:22,670 --> 00:41:28,900
So theta of 1 times log n, plus theta of 1.
所以1的theta的对数n加1的theta 

874
00:41:28,900 --> 00:41:30,869
And I know that log n dominates a constant,
而且我知道log n占主导地位， 

875
00:41:30,869 --> 00:41:35,759
so this is going to be theta of log n.
所以这将是log n的θ。 

876
00:41:35,760 --> 00:41:40,655



877
00:41:40,655 --> 00:41:41,155
Solved.
解决了。 

878
00:41:41,155 --> 00:41:45,260



879
00:41:45,260 --> 00:41:45,760
OK.
好。 

880
00:41:45,760 --> 00:41:48,130
How are we doing?
我们怎么样

881
00:41:48,130 --> 00:41:48,750
Yes?
是？ 

882
00:41:48,750 --> 00:41:51,434
AUDIENCE: In the second to last from the bottom,
观众：从倒数第二倒数第二， 

883
00:41:51,434 --> 00:41:55,603
I don't understand [INAUDIBLE] of c times log n
我听不清c次登录n的[听不清] 

884
00:41:55,603 --> 00:41:58,018
replace i by log n.
用日志n替换我。 

885
00:41:58,018 --> 00:42:02,349
In the second part of the equation, how did you--
在等式的第二部分中，您如何- 

886
00:42:02,349 --> 00:42:03,099
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

887
00:42:03,099 --> 00:42:06,429
So in the jump from here to here, where I said
所以在从这里跳到这里，我说

888
00:42:06,429 --> 00:42:08,861
i equals log n-- Right?
我等于log n-对吗？ 

889
00:42:08,862 --> 00:42:10,510
AUDIENCE: Yep.
听众：是的。 

890
00:42:10,510 --> 00:42:11,460
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

891
00:42:11,659 --> 00:42:14,989
So i becomes log n, c stays c.
因此，我成为log n，c停留在c。 

892
00:42:14,989 --> 00:42:17,750
You're wondering about this part, right?
您想知道这部分，对吗？ 

893
00:42:17,750 --> 00:42:21,400
So if i is log n, then 2 to the i is n.
因此，如果i为log n，则2等于i。 

894
00:42:21,400 --> 00:42:25,460
So I have T of 1, which I have here.
所以我的T为1，我在这里。 

895
00:42:25,659 --> 00:42:29,149
So I want this to have this happen.
所以我希望这种情况能够发生。 

896
00:42:29,150 --> 00:42:34,726
When I'm solving for i here, I set this guy to my base case,
当我在这里为我求解时，我将此人设置为基本情况， 

897
00:42:34,726 --> 00:42:36,099
so that I can get this to happen.
这样我才能做到这一点。 

898
00:42:36,099 --> 00:42:39,029



899
00:42:39,030 --> 00:42:42,094
The idea here is that you're expanding the recursion
这里的想法是您正在扩展递归

900
00:42:42,094 --> 00:42:43,760
forever, and you know that at some point
永远，你知道在某个时候

901
00:42:43,760 --> 00:42:44,690
you're going to have to stop.
您将不得不停止。 

902
00:42:44,889 --> 00:42:45,539
When do you stop?
你什么时候停下来

903
00:42:45,539 --> 00:42:46,630
You stop at the base case.
您停在基本情况下。 

904
00:42:46,630 --> 00:42:49,208
So you force this to become the base case.
因此，您迫使它成为基本案例。 

905
00:42:49,208 --> 00:42:54,576



906
00:42:54,576 --> 00:42:56,394
OK?
好？ 

907
00:42:56,394 --> 00:42:56,894
OK.
好。 

908
00:42:56,894 --> 00:43:02,440



909
00:43:02,440 --> 00:43:04,650
Let's do 2D peak finding.
让我们进行2D峰发现。 

910
00:43:04,650 --> 00:43:06,039
Let's talk about it a little bit.
让我们谈一点。 

911
00:43:06,039 --> 00:43:17,349



912
00:43:17,349 --> 00:43:20,420
So 2D peak finding is exactly like 1D peak finding,
因此2D峰发现与1D峰发现完全一样， 

913
00:43:20,420 --> 00:43:27,019
except you have a 2D matrix instead of a 1D array.
除了您使用2D矩阵而不是1D数组。 

914
00:43:27,019 --> 00:43:28,610
Let's see if I can do this right.
让我们看看我是否可以正确执行此操作。 

915
00:43:28,610 --> 00:43:49,980



916
00:43:49,980 --> 00:43:53,210
So suppose this is our matrix.
因此，假设这是我们的矩阵。 

917
00:43:53,210 --> 00:43:57,909
And suppose these are the rows.
并假设这些是行。 

918
00:43:57,909 --> 00:44:05,599
Suppose we have m rows and n columns.
假设我们有m行n列。 

919
00:44:05,599 --> 00:44:22,940



920
00:44:22,940 --> 00:44:26,579
Can anyone remind me what the psuedocode for 2D
谁能提醒我2D伪码是什么

921
00:44:26,579 --> 00:44:29,259
peak finding that we talked about in lecture?
我们在讲座中谈到的高峰发现？ 

922
00:44:29,260 --> 00:44:30,550
So we had two attempts.
因此我们进行了两次尝试。 

923
00:44:30,550 --> 00:44:32,110
The first one was a clear failure.
第一个显然是失败的。 

924
00:44:32,110 --> 00:44:33,440
It didn't work.
没用

925
00:44:33,440 --> 00:44:35,349
The second one worked.
第二个工作。 

926
00:44:35,349 --> 00:44:38,139
And we talked about its running time a little bit.
我们还谈到了它的运行时间。 

927
00:44:38,139 --> 00:44:40,389
And then [INAUDIBLE] asked you to think of a variation
然后[听不清]让您考虑一个变化

928
00:44:40,389 --> 00:44:41,629
to the second one.
到第二个。 

929
00:44:41,630 --> 00:44:45,519
So let's do those straight up second version
所以让我们直接做第二版

930
00:44:45,719 --> 00:44:48,489
of the pseudocode without the variation.
没有变化的伪代码。 

931
00:44:48,489 --> 00:44:49,569
So 2D peak finding.
因此2D峰发现。 

932
00:44:49,570 --> 00:45:00,434



933
00:45:00,434 --> 00:45:01,150
What is the algorithm?
什么是算法？ 

934
00:45:01,349 --> 00:45:07,681



935
00:45:07,681 --> 00:45:08,179
All right.
好吧。 

936
00:45:08,179 --> 00:45:11,219
One person was not asleep in my section at the end of lecture.
讲座结束时，我所在的区域没有一个人在睡觉。 

937
00:45:11,219 --> 00:45:13,105
I'm proud.
我很自豪。 

938
00:45:13,105 --> 00:45:13,646
AUDIENCE: OK.
听众：好的。 

939
00:45:13,646 --> 00:45:15,128
Well, Which one of us?
好吧，我们中的哪一个？ 

940
00:45:15,128 --> 00:45:16,634
We both spoke at the same time.
我们俩同时讲话。 

941
00:45:16,634 --> 00:45:18,675
VICTOR COSTAN: You had your hand up first though.
维克多·科斯坦：虽然您首先举起了手。 

942
00:45:18,675 --> 00:45:21,590
AUDIENCE: So you just pick a middle of the column.
听众：因此，您只需选择列中间。 

943
00:45:21,590 --> 00:45:23,248
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

944
00:45:23,447 --> 00:45:24,875
And then you find the peak there.
然后您在那找到了顶峰。 

945
00:45:24,876 --> 00:45:29,170



946
00:45:29,170 --> 00:45:32,291
AUDIENCE: And then you shift the neighbors, I think.
听众：我想，然后你转移邻居。 

947
00:45:32,291 --> 00:45:42,685
VICTOR COSTAN: Find peak neighbors.
维克多·科斯坦（VICTOR COSTAN）：查找高峰邻居。 

948
00:45:42,686 --> 00:45:46,630
AUDIENCE: Neighbors in the same room?
听众：邻居在同一个房间？ 

949
00:45:46,630 --> 00:45:48,409
AUDIENCE: Yeah, yeah.
听众：是的，是的。 

950
00:45:48,409 --> 00:45:50,250
VICTOR COSTAN: That's the horizontal line, right?
维克多·科斯坦：那是水平线，对吧？ 

951
00:45:50,449 --> 00:45:50,949
OK.
好。 

952
00:45:50,949 --> 00:45:55,788
So what do you mean by find the peak here?
那么，在这里找到峰值意味着什么？ 

953
00:45:55,788 --> 00:45:57,599
AUDIENCE: Like within the column?
听众：喜欢在专栏中？ 

954
00:45:57,599 --> 00:45:58,391
VICTOR COSTAN: Yes.
维克多·科斯坦：是的。 

955
00:45:58,391 --> 00:46:01,289
So find the peak using what we talked about before?
因此，使用我们之前讨论的内容找到高峰吗？ 

956
00:46:01,289 --> 00:46:02,239
AUDIENCE: Yeah.
听众：是的。 

957
00:46:02,239 --> 00:46:02,989
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

958
00:46:02,989 --> 00:46:05,599



959
00:46:05,599 --> 00:46:10,769
Find 1D peak.
找到一维峰。 

960
00:46:10,769 --> 00:46:15,570



961
00:46:15,570 --> 00:46:16,650
So you're thinking ahead.
所以您正在考虑。 

962
00:46:16,650 --> 00:46:18,750
You're thinking of the variation that [INAUDIBLE]
您正在考虑[音频不清晰] 

963
00:46:18,750 --> 00:46:20,601
asked you guys to think about at home.
让你们在家考虑。 

964
00:46:20,601 --> 00:46:21,849
I'm glad you thought about it.
很高兴您想到了。 

965
00:46:21,849 --> 00:46:23,059
That's good.
那很好。 

966
00:46:23,059 --> 00:46:25,168
But what's the one that we had in lecture?
但是我们讲座中有什么？ 

967
00:46:25,168 --> 00:46:26,710
I don't want to think about-- I don't
我不想考虑-我不想

968
00:46:26,710 --> 00:46:28,251
want to give you guys the answer yet.
想要给你们答案。 

969
00:46:28,251 --> 00:46:32,110
So what did we say we were going to do in lecture?
那我们说我们要在演讲中做什么？ 

970
00:46:32,110 --> 00:46:32,567
Yes?
是？ 

971
00:46:32,766 --> 00:46:35,201
AUDIENCE: I think we just picked a spot,
观众：我想我们只是选了一个位置， 

972
00:46:35,202 --> 00:46:37,130
checked the neighbors and kept walking uphill.
检查邻居，并继续走上坡路。 

973
00:46:37,130 --> 00:46:38,856
That makes sense.
那讲得通。 

974
00:46:38,856 --> 00:46:41,590
Every time we found a neighbor that was bigger,
每当我们找到一个更大的邻居时， 

975
00:46:41,590 --> 00:46:42,710
we moved to that spot.
我们搬到那个地方。 

976
00:46:42,909 --> 00:46:44,489
Checked its neighbors.
检查了它的邻居。 

977
00:46:44,489 --> 00:46:45,989
VICTOR COSTAN: So this is the-- This
维克多·科斯坦：这就是

978
00:46:45,989 --> 00:46:48,429
is the first algorithm that's slow.
是第一个速度很慢的算法。 

979
00:46:48,429 --> 00:46:49,025
It works.
有用。 

980
00:46:49,025 --> 00:46:50,649
You're going to get the correct answer.
您将得到正确的答案。 

981
00:46:50,650 --> 00:46:54,530
But it's slow because if you have some handily crafted
但这很慢，因为如果您有一些手工制作

982
00:46:54,530 --> 00:46:58,570
matrix you can go like this, and you're basically
矩阵可以像这样去，基本上

983
00:46:58,570 --> 00:47:01,400
going through the whole matrix.
遍历整个矩阵。 

984
00:47:01,400 --> 00:47:01,916
Yes?
是？ 

985
00:47:01,916 --> 00:47:04,000
AUDIENCE: I think there's like an algorithm that's
听众：我认为有一种算法

986
00:47:04,000 --> 00:47:06,461
find a-- look through the column for its maximum,
找到-查看该列的最大值， 

987
00:47:06,461 --> 00:47:08,300
and then look to either side.
然后看向任一侧。 

988
00:47:08,300 --> 00:47:08,900
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

989
00:47:09,099 --> 00:47:10,940
So instead of finding a 1D peak, we're
因此，我们没有找到一维峰，而是

990
00:47:10,940 --> 00:47:12,625
going to find the maximum value.
要找到最大值。 

991
00:47:12,824 --> 00:47:16,160



992
00:47:16,161 --> 00:47:16,659
OK.
好。 

993
00:47:16,659 --> 00:47:20,480
And this is correct, and let's look at its running time.
这是正确的，让我们看一下它的运行时间。 

994
00:47:20,480 --> 00:47:25,034



995
00:47:25,034 --> 00:47:26,000
Does anyone want to help me?
有人想帮助我吗？ 

996
00:47:26,199 --> 00:47:32,049
So this is T of n m.
因此，这是n m的T。 

997
00:47:32,050 --> 00:47:32,550
Right?
对？ 

998
00:47:32,550 --> 00:47:33,548
Then rows, then columns.
然后是行，然后是列。 

999
00:47:33,548 --> 00:47:36,280



1000
00:47:36,280 --> 00:47:39,050
So what's the running time for the first step?
那么第一步的运行时间是多少？ 

1001
00:47:39,050 --> 00:47:39,670
Come on.
来吧。 

1002
00:47:39,869 --> 00:47:41,029
This is the easy one.
这很容易。 

1003
00:47:41,030 --> 00:47:42,190
Yes?
是？ 

1004
00:47:42,389 --> 00:47:42,949
The constant.
常数。 

1005
00:47:42,949 --> 00:47:43,449
Perfect.
完善。 

1006
00:47:43,449 --> 00:47:46,179



1007
00:47:46,179 --> 00:47:47,739
OK.
好。 

1008
00:47:47,739 --> 00:47:49,649
What's the running time for finding
查找的运行时间是多少

1009
00:47:49,650 --> 00:47:52,086
a maximum amount of n numbers?
最多n个数字？ 

1010
00:47:52,086 --> 00:47:53,460
AUDIENCE: n.
听众： 

1011
00:47:53,460 --> 00:47:56,000
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

1012
00:47:56,000 --> 00:47:57,829
Perfect.
完善。 

1013
00:47:57,829 --> 00:48:01,819
And suppose we do that here?
假设我们在这里这样做？ 

1014
00:48:01,820 --> 00:48:03,750
Suppose these rows don't exist.
假设这些行不存在。 

1015
00:48:03,949 --> 00:48:06,129
Suppose this is my entire matrix.
假设这是我的整个矩阵。 

1016
00:48:06,130 --> 00:48:09,230
And I'm here, and I found the maximum.
我在这里，我找到了最大的。 

1017
00:48:09,230 --> 00:48:10,179
What do I do?
我该怎么办？ 

1018
00:48:10,179 --> 00:48:12,199
I look left, I look right.
我向左看，我向右看。 

1019
00:48:12,199 --> 00:48:14,449
If both of them are smaller, then it
如果两者都较小，则

1020
00:48:14,449 --> 00:48:16,259
means I found my peak, because I know
表示我找到了自己的巅峰，因为我知道

1021
00:48:16,260 --> 00:48:18,960
that number was a maximum in my column.
这个数字是我专栏中的最大值。 

1022
00:48:18,960 --> 00:48:23,289
Now if that's not the case, if I find a number that's bigger,
现在如果不是这样，如果我发现一个更大的数字， 

1023
00:48:23,289 --> 00:48:25,329
I'll go in that direction.
我会朝那个方向走。 

1024
00:48:25,329 --> 00:48:28,289
Does that sound reasonable?
听起来合理吗？ 

1025
00:48:28,289 --> 00:48:28,789
OK.
好。 

1026
00:48:28,789 --> 00:48:34,659
So maximum for my column, and I'm going to go right.
因此，对于我的专栏文章，最大值是正确的。 

1027
00:48:34,659 --> 00:48:41,019
So check neighbors, and I have the same two conditions there.
因此，请检查邻居，我在那里有两个相同的条件。 

1028
00:48:41,019 --> 00:48:42,324
If it's a peak, then I'm happy.
如果是高峰，那我很高兴。 

1029
00:48:42,324 --> 00:48:45,099



1030
00:48:45,099 --> 00:48:48,429
Otherwise recurse.
否则递归。 

1031
00:48:48,429 --> 00:48:50,849
So what's the running time if I have to recurse?
那么，如果我必须递归的话，运行时间是多少？ 

1032
00:48:50,849 --> 00:48:54,659
How does the new problem look like?
新问题看起来如何？ 

1033
00:48:54,659 --> 00:48:55,799
It's an identical problem.
这是一个相同的问题。 

1034
00:48:55,800 --> 00:49:01,250
I still have a matrix, except-- What changed?
我仍然有一个矩阵，除了-发生了什么变化？ 

1035
00:49:01,449 --> 00:49:07,839
So suppose I got here-- and this is the middle of my matrix--
所以假设我来到这里-这是矩阵的中间部分- 

1036
00:49:07,840 --> 00:49:09,809
and I see that this guy is bigger,
我看到这个家伙更大， 

1037
00:49:09,809 --> 00:49:12,949
so I'm going to recurse to the right side.
所以我要递归到右侧。 

1038
00:49:12,949 --> 00:49:14,724
What happened to my problem size?
我的问题大小发生了什么？ 

1039
00:49:14,724 --> 00:49:17,589



1040
00:49:17,590 --> 00:49:18,090
OK?
好？ 

1041
00:49:18,090 --> 00:49:20,090
AUDIENCE: Sorry I'm not answering your question,
听众：对不起，我没有回答你的问题， 

1042
00:49:20,090 --> 00:49:23,673
but shouldn't find x be theta of m, not n?
但是不应该发现x是m的theta，而不是n？ 

1043
00:49:23,873 --> 00:49:24,707
Is that [INAUDIBLE]?
那是[听不清]吗？ 

1044
00:49:24,708 --> 00:49:25,789
VICTOR COSTAN: Let me see.
维克多·科斯坦：让我看看。 

1045
00:49:25,789 --> 00:49:26,710
AUDIENCE: I can't tell
听众：我不知道

1046
00:49:26,710 --> 00:49:28,710
VICTOR COSTAN: You are right.
维克多·科斯坦：对。 

1047
00:49:28,710 --> 00:49:31,380
Thank you for paying attention.
感谢您的关注。 

1048
00:49:31,380 --> 00:49:32,920
Theta m.
塞塔米

1049
00:49:32,920 --> 00:49:33,480
Sweet.
甜。 

1050
00:49:33,480 --> 00:49:34,980
That would have tripped me up later.
那会在以后使我绊倒。 

1051
00:49:34,980 --> 00:49:35,650
Thanks for saving me.
谢谢你救了我

1052
00:49:35,650 --> 00:49:36,097
AUDIENCE: OK.
听众：好的。 

1053
00:49:36,097 --> 00:49:37,181
So what was your question?
那你的问题是什么？ 

1054
00:49:37,181 --> 00:49:38,126
Sorry.
抱歉。 

1055
00:49:38,126 --> 00:49:40,500
VICTOR COSTAN: So the question is, if I have to recurse--
 COSTAN COSTAN：所以问题是，如果我必须递归- 

1056
00:49:40,500 --> 00:49:41,460
AUDIENCE: Uh-huh.
听众：嗯。 

1057
00:49:41,460 --> 00:49:43,168
VICTOR COSTAN: --what's the running time?
维克多·科斯坦：-几点钟了？ 

1058
00:49:43,168 --> 00:49:46,800



1059
00:49:46,800 --> 00:49:50,900
So I'm-- If I have to recurse, I'm in this array that was
所以我-如果必须递归，我在这个数组中

1060
00:49:51,099 --> 00:49:55,500
originally n by m, and I'm only going to look at the right
原本是n x m，我只看右边

1061
00:49:55,500 --> 00:49:56,000
side.
侧。 

1062
00:49:56,000 --> 00:50:00,309



1063
00:50:00,309 --> 00:50:06,110
How many these-- how many rows do I have in the [INAUDIBLE]?
这些[我听不清]中有几行？ 

1064
00:50:06,110 --> 00:50:08,384
Start to the easy one.
从简单开始。 

1065
00:50:08,583 --> 00:50:09,298
AUDIENCE: m.
听众：m。 

1066
00:50:09,298 --> 00:50:10,340
VICTOR COSTAN: All right.
维克多·科斯坦：好的。 

1067
00:50:10,340 --> 00:50:13,010
Same as before.
和之前一样。 

1068
00:50:13,010 --> 00:50:14,340
How many columns?
多少列？ 

1069
00:50:14,340 --> 00:50:15,210
AUDIENCE: n over 2.
观众：超过2分。 

1070
00:50:15,210 --> 00:50:16,210
VICTOR COSTAN: n over 2.
维克多·科斯坦（VICTOR COSTAN）：n大于2。 

1071
00:50:16,210 --> 00:50:18,820



1072
00:50:18,820 --> 00:50:20,300
Sweet.
甜。 

1073
00:50:20,300 --> 00:50:24,090
So there recursion for this is theta of 1
所以这个递归是1的theta 

1074
00:50:24,090 --> 00:50:32,829
plus theta of m plus T of n over 2 and m.
加上m的theta加上n在2和m上的T。 

1075
00:50:32,829 --> 00:50:35,349



1076
00:50:35,349 --> 00:50:38,869
I know that a constant can be absorbed by this other guy,
我知道另一个人可以吸收一个常数， 

1077
00:50:38,869 --> 00:50:47,121
so it's theta of m plus T of n over 2 m.
所以它是m加上2 m的n的T的θ。 

1078
00:50:47,121 --> 00:50:48,079
How would I solve this?
我该如何解决？ 

1079
00:50:48,079 --> 00:50:54,369



1080
00:50:54,369 --> 00:50:55,869
What's the first thing that we need?
我们需要的第一件事是什么？ 

1081
00:50:55,869 --> 00:50:58,380



1082
00:50:58,380 --> 00:50:58,880
Yes?
是？ 

1083
00:50:58,880 --> 00:51:00,619
AUDIENCE: Need to figure out the base case.
听众：需要弄清楚基本情况。 

1084
00:51:00,619 --> 00:51:01,179
VICTOR COSTAN: All right.
维克多·科斯坦：好的。 

1085
00:51:01,179 --> 00:51:01,539
Excellent.
优秀的。 

1086
00:51:01,539 --> 00:51:01,949
Base case.
基本情况。 

1087
00:51:01,949 --> 00:51:03,657
What's the best-- What was the base case?
最好的是-基本情况是什么？ 

1088
00:51:03,657 --> 00:51:08,400



1089
00:51:08,400 --> 00:51:10,865
AUDIENCE: T of 1 comma T of n-- m.
听众：n的1个逗号的T – m。 

1090
00:51:10,865 --> 00:51:11,597
Sorry.
抱歉。 

1091
00:51:11,597 --> 00:51:12,230
VICTOR COSTAN: Nice.
维克多·科斯坦：好的。 

1092
00:51:12,429 --> 00:51:14,849
AUDIENCE: Equal to O of m.
听众：等于m的O。 

1093
00:51:14,849 --> 00:51:17,289



1094
00:51:17,289 --> 00:51:18,039
VICTOR COSTAN: OK.
维克多·科斯坦：好的。 

1095
00:51:18,039 --> 00:51:21,259



1096
00:51:21,260 --> 00:51:22,820
Sweet.
甜。 

1097
00:51:23,019 --> 00:51:26,179
So if I only have one column, then I
因此，如果我只有一栏，那么我

1098
00:51:26,179 --> 00:51:28,769
can do-- I can find the maximum and I know for sure
可以做到-我可以找到最大值，并且我肯定知道

1099
00:51:28,769 --> 00:51:29,880
that's going to be a peak.
那将是一个高峰。 

1100
00:51:29,880 --> 00:51:31,059
Job done.
任务完成。 

1101
00:51:31,059 --> 00:51:32,989
That's my base case.
那是我的基本情况。 

1102
00:51:32,989 --> 00:51:35,679
So I'm going to reduce the problem size in half,
所以我将问题的大小减少一半， 

1103
00:51:35,679 --> 00:51:37,239
until I get to a single column.
直到我进入一个专栏。 

1104
00:51:37,239 --> 00:51:40,799
Then I find the peak there, and I'm happy.
然后我在那找到了顶峰，我很高兴。 

1105
00:51:40,800 --> 00:51:42,097
How would I solve this recurrence?
我该如何解决这种复发？ 

1106
00:51:42,297 --> 00:51:46,551



1107
00:51:46,552 --> 00:51:48,010
It's a one minute answer, because I
一分钟的答案，因为我

1108
00:51:48,010 --> 00:51:51,045
think that's exactly how much time we have, as a hint.
认为这正是我们有多少时间。 

1109
00:51:51,244 --> 00:51:57,679



1110
00:51:57,679 --> 00:51:59,485
Come on guys, this looks familiar.
伙计们，这看起来很熟悉。 

1111
00:51:59,485 --> 00:51:59,984
Yes?
是？ 

1112
00:51:59,985 --> 00:52:01,905
AUDIENCE:Going to be something like the recurrence over
听众：会像复发一样

1113
00:52:01,905 --> 00:52:02,190
there--
那里 - 

1114
00:52:02,389 --> 00:52:03,347
VICTOR COSTAN: Exactly.
维克多·科斯坦：好的。 

1115
00:52:03,347 --> 00:52:04,782
AUDIENCE: [INAUDIBLE] of just n.
听众：[听不清]仅n。 

1116
00:52:04,782 --> 00:52:05,539
VICTOR COSTAN: Exactly.
维克多·科斯坦：好的。 

1117
00:52:05,739 --> 00:52:07,229
m never changes, right?
我永远都不会改变，对吗？ 

1118
00:52:07,230 --> 00:52:09,789
So this is basically a function of n.
因此，这基本上是n的函数。 

1119
00:52:09,989 --> 00:52:13,279
So if m never changes, and I pretend that it's a constant,
因此，如果m永远不变，我假装这是一个常数， 

1120
00:52:13,280 --> 00:52:15,750
this looks exactly like the recursion-- the recurrence
这看起来完全像递归-递归

1121
00:52:15,949 --> 00:52:17,339
that we solve before.
我们之前解决过的。 

1122
00:52:17,340 --> 00:52:22,920
T of n is a constant, plus T of n over 2.
 n的T是常数，加上n的T大于2。 

1123
00:52:22,920 --> 00:52:26,000



1124
00:52:26,000 --> 00:52:29,769
So I'm going to get that constant,
所以我要保持不变， 

1125
00:52:29,769 --> 00:52:35,380
multiply it by log n, which is the solution that I had before.
将它乘以log n，这就是我以前的解决方案。 

1126
00:52:35,380 --> 00:52:42,010
So the running time is theta of m log n.
因此，运行时间为m log n的theta。 

1127
00:52:42,210 --> 00:52:42,709
All right.
好吧。 

1128
00:52:42,710 --> 00:52:46,250
I think I have 30 seconds, so what if I would choose-- What
我想我有30秒，所以如果我选择-该怎么办？ 

1129
00:52:46,250 --> 00:52:48,869
if I would try to do this algorithm instead?
如果我想尝试做这个算法呢？ 

1130
00:52:48,869 --> 00:52:50,739
It's another one minute question.
这是另一个一分钟的问题。 

1131
00:52:50,739 --> 00:52:51,739
So I guess I'm cheating.
所以我想我在作弊。 

1132
00:52:51,739 --> 00:52:53,279
I'm taking time away.
我要抽时间。 

1133
00:52:53,280 --> 00:52:54,019
Sorry.
抱歉。 

1134
00:52:54,219 --> 00:52:56,799
So what if I would be finding a 1D
那如果我要找到一维

1135
00:52:56,800 --> 00:52:58,356
peak instead of finding a maximum?
高峰而不是找到最大值？ 

1136
00:52:58,556 --> 00:53:01,314



1137
00:53:01,315 --> 00:53:03,940
I'm looking at the running time, because if the running time is
我正在查看运行时间，因为如果运行时间是

1138
00:53:03,940 --> 00:53:05,648
going to be the same, it's not even worth
会一样，甚至不值得

1139
00:53:05,648 --> 00:53:07,400
thinking if it's correct or not.
在考虑是否正确。 

1140
00:53:07,400 --> 00:53:08,750
If it's a more complicated algorithm
如果是更复杂的算法

1141
00:53:08,949 --> 00:53:11,349
with the same running time, why care about it?
在相同的运行时间下，为什么要关心它？ 

1142
00:53:11,349 --> 00:53:13,900
So is the running time going to be better?
那么运行时间会更好吗？ 

1143
00:53:13,900 --> 00:53:14,399
OK.
好。 

1144
00:53:14,400 --> 00:53:15,900
I heard a nod.
我听到了点头。 

1145
00:53:15,900 --> 00:53:17,094
Why?
为什么？ 

1146
00:53:17,094 --> 00:53:19,588
AUDIENCE: Won't it be log m times log n?
听众：会不会是log m乘log n？ 

1147
00:53:19,588 --> 00:53:20,630
VICTOR COSTAN: All right.
维克多·科斯坦：好的。 

1148
00:53:20,630 --> 00:53:23,039
So 1D peak is exactly what we have there.
因此，一维峰正是我们所拥有的。 

1149
00:53:23,239 --> 00:53:24,379
Thank you.
谢谢。 

1150
00:53:24,380 --> 00:53:29,230
1D peak is exactly like you said, log m.
一维峰与您所说的完全相同，请记录m。 

1151
00:53:29,230 --> 00:53:32,480
So this constant here becomes this constant here,
所以这里的这个常数变成这里的这个常数， 

1152
00:53:32,480 --> 00:53:35,550
so the algorithm would be a lot faster.
所以算法会快很多。 

1153
00:53:35,550 --> 00:53:38,460
As an order of magnitude idea, if your m and n are one million
作为一个数量级的想法，如果您的m和n为一百万

1154
00:53:38,659 --> 00:53:40,899
each, then log n is 20.
每个，则登录n为20。 

1155
00:53:40,900 --> 00:53:43,289
So that's a 50 time max improvement.
因此，最多可提高50倍。 

1156
00:53:43,289 --> 00:53:46,900
And these are real input sizes you might get.
这些是您可能会得到的实际输入大小。 

1157
00:53:46,900 --> 00:53:47,519
And that's it.
就是这样。 

1158
00:53:47,519 --> 00:53:52,519
Thank you guys.
感谢大伙们。 

